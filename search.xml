<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>rocketmq介绍</title>
      <link href="/2021/06/17/rocketmq%E4%BB%8B%E7%BB%8D/"/>
      <url>/2021/06/17/rocketmq%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<h1 id="1-MQ介绍"><a href="#1-MQ介绍" class="headerlink" title="1. MQ介绍"></a>1. MQ介绍</h1><h2 id="1-1-为什么要用MQ"><a href="#1-1-为什么要用MQ" class="headerlink" title="1.1 为什么要用MQ"></a>1.1 为什么要用MQ</h2><p>消息队列是一种“先进先出”的数据结构</p><p><img src="/2021/06/17/rocketmq%E4%BB%8B%E7%BB%8D/queue1.png"></p><p>其应用场景主要包含以下3个方面</p><ul><li>应用解耦</li></ul><p>系统的耦合性越高，容错性就越低。以电商应用为例，用户创建订单后，如果耦合调用库存系统、物流系统、支付系统，任何一个子系统出了故障或者因为升级等原因暂时不可用，都会造成下单操作异常，影响用户使用体验。</p><p><img src="/2021/06/17/rocketmq%E4%BB%8B%E7%BB%8D/%E8%A7%A3%E8%80%A61.png"></p><p>使用消息队列解耦合，系统的耦合性就会提高了。比如物流系统发生故障，需要几分钟才能来修复，在这段时间内，物流系统要处理的数据被缓存到消息队列中，用户的下单操作正常完成。当物流系统回复后，补充处理存在消息队列中的订单消息即可，终端系统感知不到物流系统发生过几分钟故障。</p><p><img src="/2021/06/17/rocketmq%E4%BB%8B%E7%BB%8D/%E8%A7%A3%E8%80%A62.png"></p><ul><li>流量削峰</li></ul><p><img src="/2021/06/17/rocketmq%E4%BB%8B%E7%BB%8D/mq-5.png"></p><p>应用系统如果遇到系统请求流量的瞬间猛增，有可能会将系统压垮。有了消息队列可以将大量请求缓存起来，分散到很长一段时间处理，这样可以大大提到系统的稳定性和用户体验。</p><p><img src="/2021/06/17/rocketmq%E4%BB%8B%E7%BB%8D/mq-6.png"></p><p>一般情况，为了保证系统的稳定性，如果系统负载超过阈值，就会阻止用户请求，这会影响用户体验，而如果使用消息队列将请求缓存起来，等待系统处理完毕后通知用户下单完毕，这样总不能下单体验要好。</p><p><u>处于经济考量目的：</u></p><p>业务系统正常时段的QPS如果是1000，流量最高峰是10000，为了应对流量高峰配置高性能的服务器显然不划算，这时可以使用消息队列对峰值流量削峰</p><ul><li>数据分发</li></ul><p><img src="/2021/06/17/rocketmq%E4%BB%8B%E7%BB%8D/mq-1.png"></p><p>通过消息队列可以让数据在多个系统更加之间进行流通。数据的产生方不需要关心谁来使用数据，只需要将数据发送到消息队列，数据使用方直接在消息队列中直接获取数据即可</p><p><img src="/2021/06/17/rocketmq%E4%BB%8B%E7%BB%8D/mq-2.png"></p><h2 id="1-2-MQ的优点和缺点"><a href="#1-2-MQ的优点和缺点" class="headerlink" title="1.2 MQ的优点和缺点"></a>1.2 MQ的优点和缺点</h2><p>优点：解耦、削峰、数据分发</p><p>缺点包含以下几点：</p><ul><li><p>系统可用性降低</p><p>系统引入的外部依赖越多，系统稳定性越差。一旦MQ宕机，就会对业务造成影响。</p><p>如何保证MQ的高可用？</p></li><li><p>系统复杂度提高</p><p>MQ的加入大大增加了系统的复杂度，以前系统间是同步的远程调用，现在是通过MQ进行异步调用。</p><p>如何保证消息没有被重复消费？怎么处理消息丢失情况？那么保证消息传递的顺序性？</p></li><li><p>一致性问题</p><p>A系统处理完业务，通过MQ给B、C、D三个系统发消息数据，如果B系统、C系统处理成功，D系统处理失败。</p><p>如何保证消息数据处理的一致性？</p></li></ul><h2 id="1-3-各种MQ产品的比较"><a href="#1-3-各种MQ产品的比较" class="headerlink" title="1.3 各种MQ产品的比较"></a>1.3 各种MQ产品的比较</h2><p>常见的MQ产品包括Kafka、ActiveMQ、RabbitMQ、RocketMQ。 </p><p><img src="/2021/06/17/rocketmq%E4%BB%8B%E7%BB%8D/MQ%E6%AF%94%E8%BE%83.png"></p><h1 id="2-RocketMQ快速入门"><a href="#2-RocketMQ快速入门" class="headerlink" title="2. RocketMQ快速入门"></a>2. RocketMQ快速入门</h1><p>RocketMQ是阿里巴巴2016年MQ中间件，使用Java语言开发，在阿里内部，RocketMQ承接了例如“双11”等高并发场景的消息流转，能够处理万亿级别的消息。</p><h2 id="2-1-准备工作"><a href="#2-1-准备工作" class="headerlink" title="2.1 准备工作"></a>2.1 准备工作</h2><h3 id="2-1-1-下载RocketMQ"><a href="#2-1-1-下载RocketMQ" class="headerlink" title="2.1.1 下载RocketMQ"></a>2.1.1 下载RocketMQ</h3><p>RocketMQ最新版本：4.5.1</p><p><a href="https://www.apache.org/dyn/closer.cgi?path=rocketmq/4.5.1/rocketmq-all-4.5.1-bin-release.zip">下载地址</a></p><h3 id="2-2-2-环境要求"><a href="#2-2-2-环境要求" class="headerlink" title="2.2.2 环境要求"></a>2.2.2 环境要求</h3><ul><li><p>Linux64位系统</p></li><li><p>JDK1.8(64位)</p></li><li><p>源码安装需要安装Maven 3.2.x</p></li></ul><h2 id="2-2-安装RocketMQ"><a href="#2-2-安装RocketMQ" class="headerlink" title="2.2 安装RocketMQ"></a>2.2 安装RocketMQ</h2><h3 id="2-2-1-安装步骤"><a href="#2-2-1-安装步骤" class="headerlink" title="2.2.1 安装步骤"></a>2.2.1 安装步骤</h3><p>本教程以二进制包方式安装</p><ol><li>解压安装包</li><li>进入安装目录</li></ol><h3 id="2-2-2-目录介绍"><a href="#2-2-2-目录介绍" class="headerlink" title="2.2.2 目录介绍"></a>2.2.2 目录介绍</h3><ul><li>bin：启动脚本，包括shell脚本和CMD脚本</li><li>conf：实例配置文件 ，包括broker配置文件、logback配置文件等</li><li>lib：依赖jar包，包括Netty、commons-lang、FastJSON等</li></ul><h2 id="2-3-启动RocketMQ"><a href="#2-3-启动RocketMQ" class="headerlink" title="2.3 启动RocketMQ"></a>2.3 启动RocketMQ</h2><ol><li>启动NameServer</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1.启动NameServer</span></span><br><span class="line">nohup sh bin/mqnamesrv &amp;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 2.查看启动日志</span></span><br><span class="line">tail -f ~/logs/rocketmqlogs/namesrv.log</span><br></pre></td></tr></table></figure><ol start="2"><li>启动Broker</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1.启动Broker</span></span><br><span class="line">nohup sh bin/mqbroker -n localhost:9876 &amp;</span><br><span class="line"><span class="meta">#</span><span class="bash"> 2.查看启动日志</span></span><br><span class="line">tail -f ~/logs/rocketmqlogs/broker.log </span><br></pre></td></tr></table></figure><ul><li><p>问题描述：</p><p>RocketMQ默认的虚拟机内存较大，启动Broker如果因为内存不足失败，需要编辑如下两个配置文件，修改JVM内存大小</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 编辑runbroker.sh和runserver.sh修改默认JVM大小</span></span><br><span class="line">vi runbroker.sh</span><br><span class="line">vi runserver.sh</span><br></pre></td></tr></table></figure><ul><li>参考设置：</li></ul><p><code>JAVA_OPT=&quot;$&#123;JAVA_OPT&#125; -server -Xms256m -Xmx256m -Xmn128m -XX:MetaspaceSize=128m  -XX:MaxMetaspaceSize=320m&quot;</code></p><h2 id="2-4-测试RocketMQ"><a href="#2-4-测试RocketMQ" class="headerlink" title="2.4 测试RocketMQ"></a>2.4 测试RocketMQ</h2><h3 id="2-4-1-发送消息"><a href="#2-4-1-发送消息" class="headerlink" title="2.4.1 发送消息"></a>2.4.1 发送消息</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1.设置环境变量</span></span><br><span class="line"><span class="built_in">export</span> NAMESRV_ADDR=localhost:9876</span><br><span class="line"><span class="comment"># 2.使用安装包的Demo发送消息</span></span><br><span class="line">sh bin/tools.sh org.apache.rocketmq.example.quickstart.Producer</span><br></pre></td></tr></table></figure><h3 id="2-4-2-接收消息"><a href="#2-4-2-接收消息" class="headerlink" title="2.4.2 接收消息"></a>2.4.2 接收消息</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1.设置环境变量</span></span><br><span class="line">export NAMESRV_ADDR=localhost:9876</span><br><span class="line"><span class="meta">#</span><span class="bash"> 2.接收消息</span></span><br><span class="line">sh bin/tools.sh org.apache.rocketmq.example.quickstart.Consumer</span><br></pre></td></tr></table></figure><h2 id="2-5-关闭RocketMQ"><a href="#2-5-关闭RocketMQ" class="headerlink" title="2.5 关闭RocketMQ"></a>2.5 关闭RocketMQ</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 1.关闭NameServer</span></span><br><span class="line">sh bin/mqshutdown namesrv</span><br><span class="line"><span class="meta">#</span><span class="bash"> 2.关闭Broker</span></span><br><span class="line">sh bin/mqshutdown broker</span><br></pre></td></tr></table></figure><h1 id="3-RocketMQ集群搭建"><a href="#3-RocketMQ集群搭建" class="headerlink" title="3. RocketMQ集群搭建"></a>3. RocketMQ集群搭建</h1><h2 id="3-1-各角色介绍"><a href="#3-1-各角色介绍" class="headerlink" title="3.1 各角色介绍"></a>3.1 各角色介绍</h2><ul><li>Producer：消息的发送者；举例：发信者</li><li>Consumer：消息接收者；举例：收信者</li><li>Broker：暂存和传输消息；举例：邮局</li><li>NameServer：管理Broker；举例：各个邮局的管理机构</li><li>Topic：区分消息的种类；一个发送者可以发送消息给一个或者多个Topic；一个消息的接收者可以订阅一个或者多个Topic消息</li><li>Message Queue：相当于是Topic的分区；用于并行发送和接收消息</li></ul><p><img src="/2021/06/17/rocketmq%E4%BB%8B%E7%BB%8D/RocketMQ%E8%A7%92%E8%89%B2.jpg"></p><h2 id="3-2-集群搭建方式"><a href="#3-2-集群搭建方式" class="headerlink" title="3.2 集群搭建方式"></a>3.2 集群搭建方式</h2><h3 id="3-2-1-集群特点"><a href="#3-2-1-集群特点" class="headerlink" title="3.2.1 集群特点"></a>3.2.1 集群特点</h3><ul><li><p>NameServer是一个几乎无状态节点，可集群部署，节点之间无任何信息同步。</p></li><li><p>Broker部署相对复杂，Broker分为Master与Slave，一个Master可以对应多个Slave，但是一个Slave只能对应一个Master，Master与Slave的对应关系通过指定相同的BrokerName，不同的BrokerId来定义，BrokerId为0表示Master，非0表示Slave。Master也可以部署多个。每个Broker与NameServer集群中的所有节点建立长连接，定时注册Topic信息到所有NameServer。</p></li><li><p>Producer与NameServer集群中的其中一个节点（随机选择）建立长连接，定期从NameServer取Topic路由信息，并向提供Topic服务的Master建立长连接，且定时向Master发送心跳。Producer完全无状态，可集群部署。</p></li><li><p>Consumer与NameServer集群中的其中一个节点（随机选择）建立长连接，定期从NameServer取Topic路由信息，并向提供Topic服务的Master、Slave建立长连接，且定时向Master、Slave发送心跳。Consumer既可以从Master订阅消息，也可以从Slave订阅消息，订阅规则由Broker配置决定。</p></li></ul><h3 id="3-2-3-集群模式"><a href="#3-2-3-集群模式" class="headerlink" title="3.2.3 集群模式"></a>3.2.3 集群模式</h3><h4 id="1）单Master模式"><a href="#1）单Master模式" class="headerlink" title="1）单Master模式"></a>1）单Master模式</h4><p>这种方式风险较大，一旦Broker重启或者宕机时，会导致整个服务不可用。不建议线上环境使用,可以用于本地测试。</p><h4 id="2）多Master模式"><a href="#2）多Master模式" class="headerlink" title="2）多Master模式"></a>2）多Master模式</h4><p>一个集群无Slave，全是Master，例如2个Master或者3个Master，这种模式的优缺点如下：</p><ul><li>优点：配置简单，单个Master宕机或重启维护对应用无影响，在磁盘配置为RAID10时，即使机器宕机不可恢复情况下，由于RAID10磁盘非常可靠，消息也不会丢（异步刷盘丢失少量消息，同步刷盘一条不丢），性能最高；</li><li>缺点：单台机器宕机期间，这台机器上未被消费的消息在机器恢复之前不可订阅，消息实时性会受到影响。</li></ul><h4 id="3）多Master多Slave模式（异步）"><a href="#3）多Master多Slave模式（异步）" class="headerlink" title="3）多Master多Slave模式（异步）"></a>3）多Master多Slave模式（异步）</h4><p>每个Master配置一个Slave，有多对Master-Slave，HA采用异步复制方式，主备有短暂消息延迟（毫秒级），这种模式的优缺点如下：</p><ul><li>优点：即使磁盘损坏，消息丢失的非常少，且消息实时性不会受影响，同时Master宕机后，消费者仍然可以从Slave消费，而且此过程对应用透明，不需要人工干预，性能同多Master模式几乎一样；</li><li>缺点：Master宕机，磁盘损坏情况下会丢失少量消息。</li></ul><h4 id="4）多Master多Slave模式（同步）"><a href="#4）多Master多Slave模式（同步）" class="headerlink" title="4）多Master多Slave模式（同步）"></a>4）多Master多Slave模式（同步）</h4><p>每个Master配置一个Slave，有多对Master-Slave，HA采用同步双写方式，即只有主备都写成功，才向应用返回成功，这种模式的优缺点如下：</p><ul><li>优点：数据与服务都无单点故障，Master宕机情况下，消息无延迟，服务可用性与数据可用性都非常高；</li><li>缺点：性能比异步复制模式略低（大约低10%左右），发送单个消息的RT会略高，且目前版本在主节点宕机后，备机不能自动切换为主机。</li></ul><h2 id="3-3-双主双从集群搭建"><a href="#3-3-双主双从集群搭建" class="headerlink" title="3.3 双主双从集群搭建"></a>3.3 双主双从集群搭建</h2><h3 id="3-3-1-总体架构"><a href="#3-3-1-总体架构" class="headerlink" title="3.3.1 总体架构"></a>3.3.1 总体架构</h3><p>消息高可用采用2m-2s（同步双写）方式</p><p><img src="/2021/06/17/rocketmq%E4%BB%8B%E7%BB%8D/RocketMQ%E9%9B%86%E7%BE%A4.png"></p><h3 id="3-3-2-集群工作流程"><a href="#3-3-2-集群工作流程" class="headerlink" title="3.3.2 集群工作流程"></a>3.3.2 集群工作流程</h3><ol><li>启动NameServer，NameServer起来后监听端口，等待Broker、Producer、Consumer连上来，相当于一个路由控制中心。</li><li>Broker启动，跟所有的NameServer保持长连接，定时发送心跳包。心跳包中包含当前Broker信息(IP+端口等)以及存储所有Topic信息。注册成功后，NameServer集群中就有Topic跟Broker的映射关系。</li><li>收发消息前，先创建Topic，创建Topic时需要指定该Topic要存储在哪些Broker上，也可以在发送消息时自动创建Topic。</li><li>Producer发送消息，启动时先跟NameServer集群中的其中一台建立长连接，并从NameServer中获取当前发送的Topic存在哪些Broker上，轮询从队列列表中选择一个队列，然后与队列所在的Broker建立长连接从而向Broker发消息。</li><li>Consumer跟Producer类似，跟其中一台NameServer建立长连接，获取当前订阅Topic存在哪些Broker上，然后直接跟Broker建立连接通道，开始消费消息。</li></ol><h3 id="3-3-3-服务器环境"><a href="#3-3-3-服务器环境" class="headerlink" title="3.3.3 服务器环境"></a>3.3.3 服务器环境</h3><table><thead><tr><th><strong>序号</strong></th><th><strong>IP</strong></th><th><strong>角色</strong></th><th><strong>架构模式</strong></th></tr></thead><tbody><tr><td>1</td><td>192.168.25.135</td><td>nameserver、brokerserver</td><td>Master1、Slave2</td></tr><tr><td>2</td><td>192.168.25.138</td><td>nameserver、brokerserver</td><td>Master2、Slave1</td></tr></tbody></table><h3 id="3-3-4-Host添加信息"><a href="#3-3-4-Host添加信息" class="headerlink" title="3.3.4 Host添加信息"></a>3.3.4 Host添加信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/hosts</span><br></pre></td></tr></table></figure><p>配置如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># nameserver</span></span><br><span class="line">192.168.25.135 rocketmq-nameserver1</span><br><span class="line">192.168.25.138 rocketmq-nameserver2</span><br><span class="line"><span class="comment"># broker</span></span><br><span class="line">192.168.25.135 rocketmq-master1</span><br><span class="line">192.168.25.135 rocketmq-slave2</span><br><span class="line">192.168.25.138 rocketmq-master2</span><br><span class="line">192.168.25.138 rocketmq-slave1</span><br></pre></td></tr></table></figure><p>配置完成后, 重启网卡</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><h3 id="3-3-5-防火墙配置"><a href="#3-3-5-防火墙配置" class="headerlink" title="3.3.5 防火墙配置"></a>3.3.5 防火墙配置</h3><p>宿主机需要远程访问虚拟机的rocketmq服务和web服务，需要开放相关的端口号，简单粗暴的方式是直接关闭防火墙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 关闭防火墙</span></span><br><span class="line">systemctl stop firewalld.service </span><br><span class="line"><span class="comment"># 查看防火墙的状态</span></span><br><span class="line">firewall-cmd --state </span><br><span class="line"><span class="comment"># 禁止firewall开机启动</span></span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld.service</span><br></pre></td></tr></table></figure><p>或者为了安全，只开放特定的端口号，RocketMQ默认使用3个端口：9876 、10911 、11011 。如果防火墙没有关闭的话，那么防火墙就必须开放这些端口：</p><ul><li><code>nameserver</code> 默认使用 9876 端口</li><li><code>master</code> 默认使用 10911 端口</li><li><code>slave</code> 默认使用11011 端口</li></ul><p>执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开放name server默认端口</span></span><br><span class="line">firewall-cmd --remove-port=9876/tcp --permanent</span><br><span class="line"><span class="comment"># 开放master默认端口</span></span><br><span class="line">firewall-cmd --remove-port=10911/tcp --permanent</span><br><span class="line"><span class="comment"># 开放slave默认端口 (当前集群模式可不开启)</span></span><br><span class="line">firewall-cmd --remove-port=11011/tcp --permanent </span><br><span class="line"><span class="comment"># 重启防火墙</span></span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h3 id="3-3-6-环境变量配置"><a href="#3-3-6-环境变量配置" class="headerlink" title="3.3.6 环境变量配置"></a>3.3.6 环境变量配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><p>在profile文件的末尾加入如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#set rocketmq</span></span><br><span class="line">ROCKETMQ_HOME=/usr/<span class="built_in">local</span>/rocketmq/rocketmq-all-4.4.0-bin-release</span><br><span class="line">PATH=<span class="variable">$PATH</span>:<span class="variable">$ROCKETMQ_HOME</span>/bin</span><br><span class="line"><span class="built_in">export</span> ROCKETMQ_HOME PATH</span><br></pre></td></tr></table></figure><p>输入:wq! 保存并退出， 并使得配置立刻生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><h3 id="3-3-7-创建消息存储路径"><a href="#3-3-7-创建消息存储路径" class="headerlink" title="3.3.7 创建消息存储路径"></a>3.3.7 创建消息存储路径</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir /usr/<span class="built_in">local</span>/rocketmq/store</span><br><span class="line">mkdir /usr/<span class="built_in">local</span>/rocketmq/store/commitlog</span><br><span class="line">mkdir /usr/<span class="built_in">local</span>/rocketmq/store/consumequeue</span><br><span class="line">mkdir /usr/<span class="built_in">local</span>/rocketmq/store/index</span><br></pre></td></tr></table></figure><h3 id="3-3-8-broker配置文件"><a href="#3-3-8-broker配置文件" class="headerlink" title="3.3.8 broker配置文件"></a>3.3.8 broker配置文件</h3><h4 id="1）master1"><a href="#1）master1" class="headerlink" title="1）master1"></a>1）master1</h4><p>服务器：192.168.25.135</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/soft/rocketmq/conf/2m-2s-sync/broker-a.properties</span><br></pre></td></tr></table></figure><p>修改配置如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#所属集群名字</span></span><br><span class="line">brokerClusterName=rocketmq-cluster</span><br><span class="line"><span class="comment">#broker名字，注意此处不同的配置文件填写的不一样</span></span><br><span class="line">brokerName=broker-a</span><br><span class="line"><span class="comment">#0 表示 Master，&gt;0 表示 Slave</span></span><br><span class="line">brokerId=0</span><br><span class="line"><span class="comment">#nameServer地址，分号分割</span></span><br><span class="line">namesrvAddr=rocketmq-nameserver1:9876;rocketmq-nameserver2:9876</span><br><span class="line"><span class="comment">#在发送消息时，自动创建服务器不存在的topic，默认创建的队列数</span></span><br><span class="line">defaultTopicQueueNums=4</span><br><span class="line"><span class="comment">#是否允许 Broker 自动创建Topic，建议线下开启，线上关闭</span></span><br><span class="line">autoCreateTopicEnable=<span class="literal">true</span></span><br><span class="line"><span class="comment">#是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭</span></span><br><span class="line">autoCreateSubscriptionGroup=<span class="literal">true</span></span><br><span class="line"><span class="comment">#Broker 对外服务的监听端口</span></span><br><span class="line">listenPort=10911</span><br><span class="line"><span class="comment">#删除文件时间点，默认凌晨 4点</span></span><br><span class="line">deleteWhen=04</span><br><span class="line"><span class="comment">#文件保留时间，默认 48 小时</span></span><br><span class="line">fileReservedTime=120</span><br><span class="line"><span class="comment">#commitLog每个文件的大小默认1G</span></span><br><span class="line">mapedFileSizeCommitLog=1073741824</span><br><span class="line"><span class="comment">#ConsumeQueue每个文件默认存30W条，根据业务情况调整</span></span><br><span class="line">mapedFileSizeConsumeQueue=300000</span><br><span class="line"><span class="comment">#destroyMapedFileIntervalForcibly=120000</span></span><br><span class="line"><span class="comment">#redeleteHangedFileInterval=120000</span></span><br><span class="line"><span class="comment">#检测物理文件磁盘空间</span></span><br><span class="line">diskMaxUsedSpaceRatio=88</span><br><span class="line"><span class="comment">#存储路径</span></span><br><span class="line">storePathRootDir=/usr/<span class="built_in">local</span>/rocketmq/store</span><br><span class="line"><span class="comment">#commitLog 存储路径</span></span><br><span class="line">storePathCommitLog=/usr/<span class="built_in">local</span>/rocketmq/store/commitlog</span><br><span class="line"><span class="comment">#消费队列存储路径存储路径</span></span><br><span class="line">storePathConsumeQueue=/usr/<span class="built_in">local</span>/rocketmq/store/consumequeue</span><br><span class="line"><span class="comment">#消息索引存储路径</span></span><br><span class="line">storePathIndex=/usr/<span class="built_in">local</span>/rocketmq/store/index</span><br><span class="line"><span class="comment">#checkpoint 文件存储路径</span></span><br><span class="line">storeCheckpoint=/usr/<span class="built_in">local</span>/rocketmq/store/checkpoint</span><br><span class="line"><span class="comment">#abort 文件存储路径</span></span><br><span class="line">abortFile=/usr/<span class="built_in">local</span>/rocketmq/store/abort</span><br><span class="line"><span class="comment">#限制的消息大小</span></span><br><span class="line">maxMessageSize=65536</span><br><span class="line"><span class="comment">#flushCommitLogLeastPages=4</span></span><br><span class="line"><span class="comment">#flushConsumeQueueLeastPages=2</span></span><br><span class="line"><span class="comment">#flushCommitLogThoroughInterval=10000</span></span><br><span class="line"><span class="comment">#flushConsumeQueueThoroughInterval=60000</span></span><br><span class="line"><span class="comment">#Broker 的角色</span></span><br><span class="line"><span class="comment">#- ASYNC_MASTER 异步复制Master</span></span><br><span class="line"><span class="comment">#- SYNC_MASTER 同步双写Master</span></span><br><span class="line"><span class="comment">#- SLAVE</span></span><br><span class="line">brokerRole=SYNC_MASTER</span><br><span class="line"><span class="comment">#刷盘方式</span></span><br><span class="line"><span class="comment">#- ASYNC_FLUSH 异步刷盘</span></span><br><span class="line"><span class="comment">#- SYNC_FLUSH 同步刷盘</span></span><br><span class="line">flushDiskType=SYNC_FLUSH</span><br><span class="line"><span class="comment">#checkTransactionMessageEnable=false</span></span><br><span class="line"><span class="comment">#发消息线程池数量</span></span><br><span class="line"><span class="comment">#sendMessageThreadPoolNums=128</span></span><br><span class="line"><span class="comment">#拉消息线程池数量</span></span><br><span class="line"><span class="comment">#pullMessageThreadPoolNums=128</span></span><br></pre></td></tr></table></figure><h4 id="2）slave2"><a href="#2）slave2" class="headerlink" title="2）slave2"></a>2）slave2</h4><p>服务器：192.168.25.135</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/soft/rocketmq/conf/2m-2s-sync/broker-b-s.properties</span><br></pre></td></tr></table></figure><p>修改配置如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#所属集群名字</span></span><br><span class="line">brokerClusterName=rocketmq-cluster</span><br><span class="line"><span class="comment">#broker名字，注意此处不同的配置文件填写的不一样</span></span><br><span class="line">brokerName=broker-b</span><br><span class="line"><span class="comment">#0 表示 Master，&gt;0 表示 Slave</span></span><br><span class="line">brokerId=1</span><br><span class="line"><span class="comment">#nameServer地址，分号分割</span></span><br><span class="line">namesrvAddr=rocketmq-nameserver1:9876;rocketmq-nameserver2:9876</span><br><span class="line"><span class="comment">#在发送消息时，自动创建服务器不存在的topic，默认创建的队列数</span></span><br><span class="line">defaultTopicQueueNums=4</span><br><span class="line"><span class="comment">#是否允许 Broker 自动创建Topic，建议线下开启，线上关闭</span></span><br><span class="line">autoCreateTopicEnable=<span class="literal">true</span></span><br><span class="line"><span class="comment">#是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭</span></span><br><span class="line">autoCreateSubscriptionGroup=<span class="literal">true</span></span><br><span class="line"><span class="comment">#Broker 对外服务的监听端口</span></span><br><span class="line">listenPort=11011</span><br><span class="line"><span class="comment">#删除文件时间点，默认凌晨 4点</span></span><br><span class="line">deleteWhen=04</span><br><span class="line"><span class="comment">#文件保留时间，默认 48 小时</span></span><br><span class="line">fileReservedTime=120</span><br><span class="line"><span class="comment">#commitLog每个文件的大小默认1G</span></span><br><span class="line">mapedFileSizeCommitLog=1073741824</span><br><span class="line"><span class="comment">#ConsumeQueue每个文件默认存30W条，根据业务情况调整</span></span><br><span class="line">mapedFileSizeConsumeQueue=300000</span><br><span class="line"><span class="comment">#destroyMapedFileIntervalForcibly=120000</span></span><br><span class="line"><span class="comment">#redeleteHangedFileInterval=120000</span></span><br><span class="line"><span class="comment">#检测物理文件磁盘空间</span></span><br><span class="line">diskMaxUsedSpaceRatio=88</span><br><span class="line"><span class="comment">#存储路径</span></span><br><span class="line">storePathRootDir=/usr/<span class="built_in">local</span>/rocketmq/store</span><br><span class="line"><span class="comment">#commitLog 存储路径</span></span><br><span class="line">storePathCommitLog=/usr/<span class="built_in">local</span>/rocketmq/store/commitlog</span><br><span class="line"><span class="comment">#消费队列存储路径存储路径</span></span><br><span class="line">storePathConsumeQueue=/usr/<span class="built_in">local</span>/rocketmq/store/consumequeue</span><br><span class="line"><span class="comment">#消息索引存储路径</span></span><br><span class="line">storePathIndex=/usr/<span class="built_in">local</span>/rocketmq/store/index</span><br><span class="line"><span class="comment">#checkpoint 文件存储路径</span></span><br><span class="line">storeCheckpoint=/usr/<span class="built_in">local</span>/rocketmq/store/checkpoint</span><br><span class="line"><span class="comment">#abort 文件存储路径</span></span><br><span class="line">abortFile=/usr/<span class="built_in">local</span>/rocketmq/store/abort</span><br><span class="line"><span class="comment">#限制的消息大小</span></span><br><span class="line">maxMessageSize=65536</span><br><span class="line"><span class="comment">#flushCommitLogLeastPages=4</span></span><br><span class="line"><span class="comment">#flushConsumeQueueLeastPages=2</span></span><br><span class="line"><span class="comment">#flushCommitLogThoroughInterval=10000</span></span><br><span class="line"><span class="comment">#flushConsumeQueueThoroughInterval=60000</span></span><br><span class="line"><span class="comment">#Broker 的角色</span></span><br><span class="line"><span class="comment">#- ASYNC_MASTER 异步复制Master</span></span><br><span class="line"><span class="comment">#- SYNC_MASTER 同步双写Master</span></span><br><span class="line"><span class="comment">#- SLAVE</span></span><br><span class="line">brokerRole=SLAVE</span><br><span class="line"><span class="comment">#刷盘方式</span></span><br><span class="line"><span class="comment">#- ASYNC_FLUSH 异步刷盘</span></span><br><span class="line"><span class="comment">#- SYNC_FLUSH 同步刷盘</span></span><br><span class="line">flushDiskType=ASYNC_FLUSH</span><br><span class="line"><span class="comment">#checkTransactionMessageEnable=false</span></span><br><span class="line"><span class="comment">#发消息线程池数量</span></span><br><span class="line"><span class="comment">#sendMessageThreadPoolNums=128</span></span><br><span class="line"><span class="comment">#拉消息线程池数量</span></span><br><span class="line"><span class="comment">#pullMessageThreadPoolNums=128</span></span><br></pre></td></tr></table></figure><h4 id="3）master2"><a href="#3）master2" class="headerlink" title="3）master2"></a>3）master2</h4><p>服务器：192.168.25.138</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/soft/rocketmq/conf/2m-2s-sync/broker-b.properties</span><br></pre></td></tr></table></figure><p>修改配置如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#所属集群名字</span></span><br><span class="line">brokerClusterName=rocketmq-cluster</span><br><span class="line"><span class="comment">#broker名字，注意此处不同的配置文件填写的不一样</span></span><br><span class="line">brokerName=broker-b</span><br><span class="line"><span class="comment">#0 表示 Master，&gt;0 表示 Slave</span></span><br><span class="line">brokerId=0</span><br><span class="line"><span class="comment">#nameServer地址，分号分割</span></span><br><span class="line">namesrvAddr=rocketmq-nameserver1:9876;rocketmq-nameserver2:9876</span><br><span class="line"><span class="comment">#在发送消息时，自动创建服务器不存在的topic，默认创建的队列数</span></span><br><span class="line">defaultTopicQueueNums=4</span><br><span class="line"><span class="comment">#是否允许 Broker 自动创建Topic，建议线下开启，线上关闭</span></span><br><span class="line">autoCreateTopicEnable=<span class="literal">true</span></span><br><span class="line"><span class="comment">#是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭</span></span><br><span class="line">autoCreateSubscriptionGroup=<span class="literal">true</span></span><br><span class="line"><span class="comment">#Broker 对外服务的监听端口</span></span><br><span class="line">listenPort=10911</span><br><span class="line"><span class="comment">#删除文件时间点，默认凌晨 4点</span></span><br><span class="line">deleteWhen=04</span><br><span class="line"><span class="comment">#文件保留时间，默认 48 小时</span></span><br><span class="line">fileReservedTime=120</span><br><span class="line"><span class="comment">#commitLog每个文件的大小默认1G</span></span><br><span class="line">mapedFileSizeCommitLog=1073741824</span><br><span class="line"><span class="comment">#ConsumeQueue每个文件默认存30W条，根据业务情况调整</span></span><br><span class="line">mapedFileSizeConsumeQueue=300000</span><br><span class="line"><span class="comment">#destroyMapedFileIntervalForcibly=120000</span></span><br><span class="line"><span class="comment">#redeleteHangedFileInterval=120000</span></span><br><span class="line"><span class="comment">#检测物理文件磁盘空间</span></span><br><span class="line">diskMaxUsedSpaceRatio=88</span><br><span class="line"><span class="comment">#存储路径</span></span><br><span class="line">storePathRootDir=/usr/<span class="built_in">local</span>/rocketmq/store</span><br><span class="line"><span class="comment">#commitLog 存储路径</span></span><br><span class="line">storePathCommitLog=/usr/<span class="built_in">local</span>/rocketmq/store/commitlog</span><br><span class="line"><span class="comment">#消费队列存储路径存储路径</span></span><br><span class="line">storePathConsumeQueue=/usr/<span class="built_in">local</span>/rocketmq/store/consumequeue</span><br><span class="line"><span class="comment">#消息索引存储路径</span></span><br><span class="line">storePathIndex=/usr/<span class="built_in">local</span>/rocketmq/store/index</span><br><span class="line"><span class="comment">#checkpoint 文件存储路径</span></span><br><span class="line">storeCheckpoint=/usr/<span class="built_in">local</span>/rocketmq/store/checkpoint</span><br><span class="line"><span class="comment">#abort 文件存储路径</span></span><br><span class="line">abortFile=/usr/<span class="built_in">local</span>/rocketmq/store/abort</span><br><span class="line"><span class="comment">#限制的消息大小</span></span><br><span class="line">maxMessageSize=65536</span><br><span class="line"><span class="comment">#flushCommitLogLeastPages=4</span></span><br><span class="line"><span class="comment">#flushConsumeQueueLeastPages=2</span></span><br><span class="line"><span class="comment">#flushCommitLogThoroughInterval=10000</span></span><br><span class="line"><span class="comment">#flushConsumeQueueThoroughInterval=60000</span></span><br><span class="line"><span class="comment">#Broker 的角色</span></span><br><span class="line"><span class="comment">#- ASYNC_MASTER 异步复制Master</span></span><br><span class="line"><span class="comment">#- SYNC_MASTER 同步双写Master</span></span><br><span class="line"><span class="comment">#- SLAVE</span></span><br><span class="line">brokerRole=SYNC_MASTER</span><br><span class="line"><span class="comment">#刷盘方式</span></span><br><span class="line"><span class="comment">#- ASYNC_FLUSH 异步刷盘</span></span><br><span class="line"><span class="comment">#- SYNC_FLUSH 同步刷盘</span></span><br><span class="line">flushDiskType=SYNC_FLUSH</span><br><span class="line"><span class="comment">#checkTransactionMessageEnable=false</span></span><br><span class="line"><span class="comment">#发消息线程池数量</span></span><br><span class="line"><span class="comment">#sendMessageThreadPoolNums=128</span></span><br><span class="line"><span class="comment">#拉消息线程池数量</span></span><br><span class="line"><span class="comment">#pullMessageThreadPoolNums=128</span></span><br></pre></td></tr></table></figure><h4 id="4）slave1"><a href="#4）slave1" class="headerlink" title="4）slave1"></a>4）slave1</h4><p>服务器：192.168.25.138</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/soft/rocketmq/conf/2m-2s-sync/broker-a-s.properties</span><br></pre></td></tr></table></figure><p>修改配置如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#所属集群名字</span></span><br><span class="line">brokerClusterName=rocketmq-cluster</span><br><span class="line"><span class="comment">#broker名字，注意此处不同的配置文件填写的不一样</span></span><br><span class="line">brokerName=broker-a</span><br><span class="line"><span class="comment">#0 表示 Master，&gt;0 表示 Slave</span></span><br><span class="line">brokerId=1</span><br><span class="line"><span class="comment">#nameServer地址，分号分割</span></span><br><span class="line">namesrvAddr=rocketmq-nameserver1:9876;rocketmq-nameserver2:9876</span><br><span class="line"><span class="comment">#在发送消息时，自动创建服务器不存在的topic，默认创建的队列数</span></span><br><span class="line">defaultTopicQueueNums=4</span><br><span class="line"><span class="comment">#是否允许 Broker 自动创建Topic，建议线下开启，线上关闭</span></span><br><span class="line">autoCreateTopicEnable=<span class="literal">true</span></span><br><span class="line"><span class="comment">#是否允许 Broker 自动创建订阅组，建议线下开启，线上关闭</span></span><br><span class="line">autoCreateSubscriptionGroup=<span class="literal">true</span></span><br><span class="line"><span class="comment">#Broker 对外服务的监听端口</span></span><br><span class="line">listenPort=11011</span><br><span class="line"><span class="comment">#删除文件时间点，默认凌晨 4点</span></span><br><span class="line">deleteWhen=04</span><br><span class="line"><span class="comment">#文件保留时间，默认 48 小时</span></span><br><span class="line">fileReservedTime=120</span><br><span class="line"><span class="comment">#commitLog每个文件的大小默认1G</span></span><br><span class="line">mapedFileSizeCommitLog=1073741824</span><br><span class="line"><span class="comment">#ConsumeQueue每个文件默认存30W条，根据业务情况调整</span></span><br><span class="line">mapedFileSizeConsumeQueue=300000</span><br><span class="line"><span class="comment">#destroyMapedFileIntervalForcibly=120000</span></span><br><span class="line"><span class="comment">#redeleteHangedFileInterval=120000</span></span><br><span class="line"><span class="comment">#检测物理文件磁盘空间</span></span><br><span class="line">diskMaxUsedSpaceRatio=88</span><br><span class="line"><span class="comment">#存储路径</span></span><br><span class="line">storePathRootDir=/usr/<span class="built_in">local</span>/rocketmq/store</span><br><span class="line"><span class="comment">#commitLog 存储路径</span></span><br><span class="line">storePathCommitLog=/usr/<span class="built_in">local</span>/rocketmq/store/commitlog</span><br><span class="line"><span class="comment">#消费队列存储路径存储路径</span></span><br><span class="line">storePathConsumeQueue=/usr/<span class="built_in">local</span>/rocketmq/store/consumequeue</span><br><span class="line"><span class="comment">#消息索引存储路径</span></span><br><span class="line">storePathIndex=/usr/<span class="built_in">local</span>/rocketmq/store/index</span><br><span class="line"><span class="comment">#checkpoint 文件存储路径</span></span><br><span class="line">storeCheckpoint=/usr/<span class="built_in">local</span>/rocketmq/store/checkpoint</span><br><span class="line"><span class="comment">#abort 文件存储路径</span></span><br><span class="line">abortFile=/usr/<span class="built_in">local</span>/rocketmq/store/abort</span><br><span class="line"><span class="comment">#限制的消息大小</span></span><br><span class="line">maxMessageSize=65536</span><br><span class="line"><span class="comment">#flushCommitLogLeastPages=4</span></span><br><span class="line"><span class="comment">#flushConsumeQueueLeastPages=2</span></span><br><span class="line"><span class="comment">#flushCommitLogThoroughInterval=10000</span></span><br><span class="line"><span class="comment">#flushConsumeQueueThoroughInterval=60000</span></span><br><span class="line"><span class="comment">#Broker 的角色</span></span><br><span class="line"><span class="comment">#- ASYNC_MASTER 异步复制Master</span></span><br><span class="line"><span class="comment">#- SYNC_MASTER 同步双写Master</span></span><br><span class="line"><span class="comment">#- SLAVE</span></span><br><span class="line">brokerRole=SLAVE</span><br><span class="line"><span class="comment">#刷盘方式</span></span><br><span class="line"><span class="comment">#- ASYNC_FLUSH 异步刷盘</span></span><br><span class="line"><span class="comment">#- SYNC_FLUSH 同步刷盘</span></span><br><span class="line">flushDiskType=ASYNC_FLUSH</span><br><span class="line"><span class="comment">#checkTransactionMessageEnable=false</span></span><br><span class="line"><span class="comment">#发消息线程池数量</span></span><br><span class="line"><span class="comment">#sendMessageThreadPoolNums=128</span></span><br><span class="line"><span class="comment">#拉消息线程池数量</span></span><br><span class="line"><span class="comment">#pullMessageThreadPoolNums=128</span></span><br></pre></td></tr></table></figure><h3 id="3-3-9-修改启动脚本文件"><a href="#3-3-9-修改启动脚本文件" class="headerlink" title="3.3.9 修改启动脚本文件"></a>3.3.9 修改启动脚本文件</h3><h4 id="1）runbroker-sh"><a href="#1）runbroker-sh" class="headerlink" title="1）runbroker.sh"></a>1）runbroker.sh</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/<span class="built_in">local</span>/rocketmq/bin/runbroker.sh</span><br></pre></td></tr></table></figure><p>需要根据内存大小进行适当的对JVM参数进行调整：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#===================================================</span></span><br><span class="line"><span class="comment"># 开发环境配置 JVM Configuration</span></span><br><span class="line">JAVA_OPT=<span class="string">&quot;<span class="variable">$&#123;JAVA_OPT&#125;</span> -server -Xms256m -Xmx256m -Xmn128m&quot;</span></span><br></pre></td></tr></table></figure><p>####2）runserver.sh</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/<span class="built_in">local</span>/rocketmq/bin/runserver.sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JAVA_OPT=<span class="string">&quot;<span class="variable">$&#123;JAVA_OPT&#125;</span> -server -Xms256m -Xmx256m -Xmn128m -XX:MetaspaceSize=128m -XX:MaxMetaspaceSize=320m&quot;</span></span><br></pre></td></tr></table></figure><h3 id="3-3-10-服务启动"><a href="#3-3-10-服务启动" class="headerlink" title="3.3.10 服务启动"></a>3.3.10 服务启动</h3><h4 id="1）启动NameServe集群"><a href="#1）启动NameServe集群" class="headerlink" title="1）启动NameServe集群"></a>1）启动NameServe集群</h4><p>分别在192.168.25.135和192.168.25.138启动NameServer</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/rocketmq/bin</span><br><span class="line">nohup sh mqnamesrv &amp;</span><br></pre></td></tr></table></figure><h4 id="2）启动Broker集群"><a href="#2）启动Broker集群" class="headerlink" title="2）启动Broker集群"></a>2）启动Broker集群</h4><ul><li>在192.168.25.135上启动master1和slave2</li></ul><p>master1：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/rocketmq/bin</span><br><span class="line">nohup sh mqbroker -c /usr/<span class="built_in">local</span>/rocketmq/conf/2m-2s-syncbroker-a.properties &amp;</span><br></pre></td></tr></table></figure><p>slave2：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/rocketmq/bin</span><br><span class="line">nohup sh mqbroker -c /usr/<span class="built_in">local</span>/rocketmq/conf/2m-2s-sync/broker-b-s.properties &amp;</span><br></pre></td></tr></table></figure><ul><li>在192.168.25.138上启动master2和slave2</li></ul><p>master2</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/rocketmq/bin</span><br><span class="line">nohup sh mqbroker -c /usr/<span class="built_in">local</span>/rocketmq/conf/2m-2s-sync/broker-b.properties &amp;</span><br></pre></td></tr></table></figure><p>slave1</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/rocketmq/bin</span><br><span class="line">nohup sh mqbroker -c /usr/<span class="built_in">local</span>/rocketmq/conf/2m-2s-sync/broker-a-s.properties &amp;</span><br></pre></td></tr></table></figure><h3 id="3-3-11-查看进程状态"><a href="#3-3-11-查看进程状态" class="headerlink" title="3.3.11 查看进程状态"></a>3.3.11 查看进程状态</h3><p>启动后通过JPS查看启动进程</p><p><img src="/2021/06/17/rocketmq%E4%BB%8B%E7%BB%8D/jps1.png"></p><h3 id="3-3-12-查看日志"><a href="#3-3-12-查看日志" class="headerlink" title="3.3.12 查看日志"></a>3.3.12 查看日志</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看nameServer日志</span></span><br><span class="line">tail -500f ~/logs/rocketmqlogs/namesrv.log</span><br><span class="line"><span class="comment"># 查看broker日志</span></span><br><span class="line">tail -500f ~/logs/rocketmqlogs/broker.log</span><br></pre></td></tr></table></figure><h2 id="3-4-mqadmin管理工具"><a href="#3-4-mqadmin管理工具" class="headerlink" title="3.4 mqadmin管理工具"></a>3.4 mqadmin管理工具</h2><h3 id="3-4-1-使用方式"><a href="#3-4-1-使用方式" class="headerlink" title="3.4.1 使用方式"></a>3.4.1 使用方式</h3><p>进入RocketMQ安装位置，在bin目录下执行<code>./mqadmin &#123;command&#125; &#123;args&#125;</code> </p><h3 id="3-4-2-命令介绍"><a href="#3-4-2-命令介绍" class="headerlink" title="3.4.2 命令介绍"></a>3.4.2 命令介绍</h3><h4 id="1）Topic相关"><a href="#1）Topic相关" class="headerlink" title="1）Topic相关"></a>1）Topic相关</h4><table border="0" cellpadding="0" cellspacing="0" width="714"> <col width="177"> <col width="175"> <col width="177"> <col width="185"> <tr height="23" style="height:17.0pt">  <td height="23" class="xl63" width="177" style="height:17.0pt;width:133pt">名称</td>  <td class="xl64" width="175" style="width:131pt">含义</td>  <td class="xl64" width="177" style="width:133pt">命令选项</td>  <td class="xl64" width="185" style="width:139pt">说明</td> </tr> <tr height="132" style="height:99.0pt">  <td rowspan="8" height="593" class="xl68" width="163" style="border-bottom:1.0pt;  height:444.0pt;border-top:none;width:122pt">updateTopic</td>  <td rowspan="8" class="xl70" width="135" style="border-bottom:1.0pt;  border-top:none;width:101pt">创建更新Topic配置</td>  <td class="xl65" width="149" style="width:112pt">-b</td>  <td class="xl66" width="159" style="width:119pt">Broker 地址，表示 topic 所在  Broker，只支持单台Broker，地址为ip:port</td> </tr> <tr height="132" style="height:99.0pt">  <td height="132" class="xl65" width="149" style="height:99.0pt;width:112pt">-c</td>  <td class="xl66" width="159" style="width:119pt">cluster 名称，表示 topic 所在集群（集群可通过  clusterList 查询）</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl65" width="149" style="height:17.0pt;width:112pt">-h-</td>  <td class="xl66" width="159" style="width:119pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl65" width="149" style="height:43.0pt;width:112pt">-n</td>  <td class="xl66" width="159" style="width:119pt">NameServer服务地址，格式 ip:port</td> </tr> <tr height="76" style="height:57.0pt">  <td height="76" class="xl65" width="149" style="height:57.0pt;width:112pt">-p</td>  <td class="xl66" width="159" style="width:119pt">指定新topic的读写权限( W=2|R=4|WR=6 )</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl65" width="149" style="height:29.0pt;width:112pt">-r</td>  <td class="xl66" width="159" style="width:119pt">可读队列数（默认为 8）</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl65" width="149" style="height:29.0pt;width:112pt">-w</td>  <td class="xl66" width="159" style="width:119pt">可写队列数（默认为 8）</td> </tr> <tr height="95" style="height:71.0pt">  <td height="95" class="xl65" width="149" style="height:71.0pt;width:112pt">-t</td>  <td class="xl66" width="159" style="width:119pt">topic 名称（名称只能使用字符  ^[a-zA-Z0-9_-]+$ ）</td> </tr> <tr height="132" style="height:99.0pt">  <td rowspan="4" height="307" class="xl68" width="163" style="border-bottom:1.0pt;  height:230.0pt;border-top:none;width:122pt">deleteTopic</td>  <td rowspan="4" class="xl70" width="135" style="border-bottom:1.0pt;  border-top:none;width:101pt">删除Topic</td>  <td class="xl65" width="149" style="width:112pt">-c</td>  <td class="xl66" width="159" style="width:119pt">cluster 名称，表示删除某集群下的某个 topic （集群  可通过 clusterList 查询）</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl65" width="149" style="height:17.0pt;width:112pt">-h</td>  <td class="xl66" width="159" style="width:119pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl65" width="149" style="height:43.0pt;width:112pt">-n</td>  <td class="xl66" width="159" style="width:119pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="95" style="height:71.0pt">  <td height="95" class="xl65" width="149" style="height:71.0pt;width:112pt">-t</td>  <td class="xl66" width="159" style="width:119pt">topic 名称（名称只能使用字符  ^[a-zA-Z0-9_-]+$ ）</td> </tr> <tr height="23" style="height:17.0pt">  <td rowspan="3" height="287" class="xl68" width="163" style="border-bottom:1.0pt;  height:215.0pt;border-top:none;width:122pt">topicList</td>  <td rowspan="3" class="xl70" width="135" style="border-bottom:1.0pt;  border-top:none;width:101pt">查看 Topic 列表信息</td>  <td class="xl65" width="149" style="width:112pt">-h</td>  <td class="xl66" width="159" style="width:119pt">打印帮助</td> </tr> <tr height="207" style="height:155.0pt">  <td height="207" class="xl65" width="149" style="height:155.0pt;width:112pt">-c</td>  <td class="xl66" width="159" style="width:119pt">不配置-c只返回topic列表，增加-c返回clusterName,  topic, consumerGroup信息，即topic的所属集群和订阅关系，没有参数</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl65" width="149" style="height:43.0pt;width:112pt">-n</td>  <td class="xl66" width="159" style="width:119pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td rowspan="3" height="103" class="xl68" width="163" style="border-bottom:1.0pt;  height:77.0pt;border-top:none;width:122pt">topicRoute</td>  <td rowspan="3" class="xl70" width="135" style="border-bottom:1.0pt;  border-top:none;width:101pt">查看 Topic 路由信息</td>  <td class="xl65" width="149" style="width:112pt">-t</td>  <td class="xl66" width="159" style="width:119pt">topic 名称</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl65" width="149" style="height:17.0pt;width:112pt">-h</td>  <td class="xl66" width="159" style="width:119pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl65" width="149" style="height:43.0pt;width:112pt">-n</td>  <td class="xl66" width="159" style="width:119pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td rowspan="3" height="103" class="xl68" width="163" style="border-bottom:1.0pt;  height:77.0pt;border-top:none;width:122pt">topicStatus</td>  <td rowspan="3" class="xl70" width="135" style="border-bottom:1.0pt;  border-top:none;width:101pt">查看 Topic 消息队列offset</td>  <td class="xl65" width="149" style="width:112pt">-t</td>  <td class="xl66" width="159" style="width:119pt">topic 名称</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl65" width="149" style="height:17.0pt;width:112pt">-h</td>  <td class="xl66" width="159" style="width:119pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl65" width="149" style="height:43.0pt;width:112pt">-n</td>  <td class="xl66" width="159" style="width:119pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td rowspan="3" height="103" class="xl68" width="163" style="border-bottom:1.0pt;  height:77.0pt;border-top:none;width:122pt">topicClusterList</td>  <td rowspan="3" class="xl70" width="135" style="border-bottom:1.0pt;  border-top:none;width:101pt">查看 Topic 所在集群列表</td>  <td class="xl65" width="149" style="width:112pt">-t</td>  <td class="xl66" width="159" style="width:119pt">topic 名称</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl65" width="149" style="height:17.0pt;width:112pt">-h</td>  <td class="xl66" width="159" style="width:119pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl65" width="149" style="height:43.0pt;width:112pt">-n</td>  <td class="xl66" width="159" style="width:119pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td rowspan="6" height="518" class="xl68" width="163" style="border-bottom:1.0pt;  height:380pt;border-top:none;width:122pt">updateTopicPerm</td>  <td rowspan="6" class="xl70" width="135" style="border-bottom:1.0pt;  border-top:none;width:101pt">更新 Topic 读写权限</td>  <td class="xl65" width="149" style="width:112pt">-t</td>  <td class="xl66" width="159" style="width:119pt">topic 名称</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl65" width="149" style="height:17.0pt;width:112pt">-h</td>  <td class="xl66" width="159" style="width:119pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl65" width="149" style="height:43.0pt;width:112pt">-n</td>  <td class="xl66" width="159" style="width:119pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="132" style="height:99.0pt">  <td height="132" class="xl65" width="149" style="height:99.0pt;width:112pt">-b</td>  <td class="xl66" width="159" style="width:119pt">Broker 地址，表示 topic 所在  Broker，只支持单台Broker，地址为ip:port</td> </tr> <tr height="76" style="height:57.0pt">  <td height="76" class="xl65" width="149" style="height:57.0pt;width:112pt">-p</td>  <td class="xl66" width="159" style="width:119pt">指定新 topic 的读写权限( W=2|R=4|WR=6 )</td> </tr> <tr height="207" style="height:155.0pt">  <td height="207" class="xl65" width="149" style="height:155.0pt;width:112pt">-c</td>  <td class="xl66" width="159" style="width:119pt">cluster 名称，表示 topic 所在集群（集群可通过  clusterList 查询），-b优先，如果没有-b，则对集群中所有Broker执行命令</td> </tr> <tr height="23" style="height:17.0pt">  <td rowspan="5" height="199" class="xl68" width="163" style="border-bottom:1.0pt;  height:149.0pt;border-top:none;width:122pt">updateOrderConf</td>  <td rowspan="5" class="xl70" width="135" style="border-bottom:1.0pt;  border-top:none;width:101pt">从NameServer上创建、删除、获取特定命名空间的kv配置，目前还未启用</td>  <td class="xl65" width="149" style="width:112pt">-h</td>  <td class="xl66" width="159" style="width:119pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl65" width="149" style="height:43.0pt;width:112pt">-n</td>  <td class="xl66" width="159" style="width:119pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl65" width="149" style="height:17.0pt;width:112pt">-t</td>  <td class="xl66" width="159" style="width:119pt">topic，键</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl65" width="149" style="height:29.0pt;width:112pt">-v</td>  <td class="xl66" width="159" style="width:119pt">orderConf，值</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl65" width="149" style="height:43.0pt;width:112pt">-m</td>  <td class="xl66" width="159" style="width:119pt">method，可选get、put、delete</td> </tr> <tr height="23" style="height:17.0pt">  <td rowspan="4" height="198" class="xl68" width="163" style="border-bottom:1.0pt;  height:140pt;border-top:none;width:122pt">allocateMQ</td>  <td rowspan="4" class="xl70" width="135" style="border-bottom:1.0pt;  border-top:none;width:101pt">以平均负载算法计算消费者列表负载消息队列的负载结果</td>  <td class="xl65" width="149" style="width:112pt">-t</td>  <td class="xl66" width="159" style="width:119pt">topic 名称</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl65" width="149" style="height:17.0pt;width:112pt">-h</td>  <td class="xl66" width="159" style="width:119pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl65" width="149" style="height:43.0pt;width:112pt">-n</td>  <td class="xl66" width="159" style="width:119pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="95" style="height:71.0pt">  <td height="95" class="xl65" width="149" style="height:71.0pt;width:112pt">-i</td>  <td class="xl66" width="159" style="width:119pt">ipList，用逗号分隔，计算这些ip去负载Topic的消息队列</td> </tr> <tr height="23" style="height:17.0pt">  <td rowspan="4" height="142" class="xl68" width="163" style="border-bottom:1.0pt solid black;  height:106.0pt;border-top:1.0pt;width:122pt">statsAll</td>  <td rowspan="4" class="xl70" width="135" style="border-bottom:1.0pt;  border-top:none;width:101pt">打印Topic订阅关系、TPS、积累量、24h读写总量等信息</td>  <td class="xl65" width="149" style="width:112pt">-h</td>  <td class="xl66" width="159" style="width:119pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl65" width="149" style="height:43.0pt;width:112pt">-n</td>  <td class="xl66" width="159" style="width:119pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl65" width="149" style="height:29.0pt;width:112pt">-a</td>  <td class="xl66" width="159" style="width:119pt">是否只打印活跃topic</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl65" width="149" style="height:17.0pt;width:112pt">-t</td>  <td class="xl66" width="159" style="width:119pt">指定topic</td> </tr></table><p>####2）集群相关</p><table border="0" cellpadding="0" cellspacing="0" width="714"> <col width="177"> <col width="175"> <col width="177"> <col width="185"> <tr height="23" style="height:17.0pt">  <td height="23" class="xl63" width="177" style="height:17.0pt;width:133pt">名称</td>  <td class="xl64" width="175" style="width:131pt">含义</td>  <td class="xl64" width="177" style="width:133pt">命令选项</td>  <td class="xl64" width="185" style="width:139pt">说明</td> </tr> <tr height="207" style="height:155.0pt">  <td rowspan="4" height="326" class="xl67" width="177" style="border-bottom:1.0pt;  height:244.0pt;border-top:none;width:133pt"><span style="mso-spacerun:yes"> </span>clusterList</td>  <td rowspan="4" class="xl70" width="175" style="border-bottom:1.0pt;  border-top:none;width:131pt">查看集群信息，集群、BrokerName、BrokerId、TPS等信息</td>  <td class="xl65" width="177" style="width:133pt">-m</td>  <td class="xl66" width="185" style="width:139pt">打印更多信息 (增加打印出如下信息 #InTotalYest,  #OutTotalYest, #InTotalToday ,#OutTotalToday)</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl65" width="177" style="height:17.0pt;width:133pt">-h</td>  <td class="xl66" width="185" style="width:139pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl65" width="177" style="height:43.0pt;width:133pt">-n</td>  <td class="xl66" width="185" style="width:139pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl65" width="177" style="height:29.0pt;width:133pt">-i</td>  <td class="xl66" width="185" style="width:139pt">打印间隔，单位秒</td> </tr> <tr height="95" style="height:71.0pt">  <td rowspan="8" height="391" class="xl67" width="177" style="border-bottom:1.0pt;  height:292.0pt;border-top:none;width:133pt">clusterRT</td>  <td rowspan="8" class="xl70" width="175" style="border-bottom:1.0pt;  border-top:none;width:131pt">发送消息检测集群各Broker RT。消息发往${BrokerName} Topic。</td>  <td class="xl65" width="177" style="width:133pt">-a</td>  <td class="xl66" width="185" style="width:139pt">amount，每次探测的总数，RT = 总时间 /  amount</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl65" width="177" style="height:29.0pt;width:133pt">-s</td>  <td class="xl66" width="185" style="width:139pt">消息大小，单位B</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl65" width="177" style="height:17.0pt;width:133pt">-c</td>  <td class="xl66" width="185" style="width:139pt">探测哪个集群</td> </tr> <tr height="76" style="height:57.0pt">  <td height="76" class="xl65" width="177" style="height:57.0pt;width:133pt">-p</td>  <td class="xl66" width="185" style="width:139pt">是否打印格式化日志，以|分割，默认不打印</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl65" width="177" style="height:17.0pt;width:133pt">-h</td>  <td class="xl66" width="185" style="width:139pt">打印帮助</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl65" width="177" style="height:29.0pt;width:133pt">-m</td>  <td class="xl66" width="185" style="width:139pt">所属机房，打印使用</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl65" width="177" style="height:29.0pt;width:133pt">-i</td>  <td class="xl66" width="185" style="width:139pt">发送间隔，单位秒</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl65" width="177" style="height:43.0pt;width:133pt">-n</td>  <td class="xl66" width="185" style="width:139pt">NameServer 服务地址，格式 ip:port</td> </tr></table><p>####3）Broker相关</p><table border="0" cellpadding="0" cellspacing="0" width="714"> <col width="177"> <col width="175"> <col width="177"> <col width="185"> <tr height="23" style="height:17.0pt">  <td height="23" class="xl63" width="177" style="height:17.0pt;width:133pt">名称</td>  <td class="xl64" width="175" style="width:131pt">含义</td>  <td class="xl64" width="177" style="width:133pt">命令选项</td>  <td class="xl64" width="185" style="width:139pt">说明</td> </tr> <tr height="57" style="height:43.0pt">  <td rowspan="6" height="206" class="xl69" width="191" style="border-bottom:1.0pt;  height:154.0pt;border-top:none;width:143pt">updateBrokerConfig</td>  <td rowspan="6" class="xl72" width="87" style="border-bottom:1.0pt;  border-top:none;width:65pt">更新 Broker 配置文件，会修改Broker.conf</td>  <td class="xl67" width="87" style="width:65pt">-b</td>  <td class="xl68" width="87" style="width:65pt">Broker 地址，格式为ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-c</td>  <td class="xl68" width="87" style="width:65pt">cluster 名称</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-k</td>  <td class="xl68" width="87" style="width:65pt">key 值</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-v</td>  <td class="xl68" width="87" style="width:65pt">value 值</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl67" width="87" style="height:43.0pt;width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="57" style="height:43.0pt">  <td rowspan="3" height="137" class="xl69" width="191" style="border-bottom:1.0pt;  height:103.0pt;border-top:none;width:143pt">brokerStatus</td>  <td rowspan="3" class="xl72" width="87" style="border-bottom:1.0pt;  border-top:none;width:65pt">查看 Broker 统计信息、运行状态（你想要的信息几乎都在里面）</td>  <td class="xl67" width="87" style="width:65pt">-b</td>  <td class="xl68" width="87" style="width:65pt">Broker 地址，地址为ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl67" width="87" style="height:43.0pt;width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="57" style="height:43.0pt">  <td rowspan="6" height="256" class="xl69" width="191" style="border-bottom:1.0pt;  height:192.0pt;border-top:none;width:143pt">brokerConsumeStats</td>  <td rowspan="6" class="xl72" width="87" style="border-bottom:1.0pt;  border-top:none;width:65pt">Broker中各个消费者的消费情况，按Message Queue维度返回Consume  Offset，Broker Offset，Diff，TImestamp等信息</td>  <td class="xl67" width="87" style="width:65pt">-b</td>  <td class="xl68" width="87" style="width:65pt">Broker 地址，地址为ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-t</td>  <td class="xl68" width="87" style="width:65pt">请求超时时间</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl67" width="87" style="height:29.0pt;width:65pt">-l</td>  <td class="xl68" width="87" style="width:65pt">diff阈值，超过阈值才打印</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl67" width="87" style="height:43.0pt;width:65pt">-o</td>  <td class="xl68" width="87" style="width:65pt">是否为顺序topic，一般为false</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl67" width="87" style="height:43.0pt;width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="57" style="height:43.0pt">  <td rowspan="2" height="114" class="xl69" width="191" style="border-bottom:1.0pt;  height:86.0pt;border-top:none;width:143pt">getBrokerConfig</td>  <td rowspan="2" class="xl72" width="87" style="border-bottom:1.0pt  border-top:none;width:65pt">获取Broker配置</td>  <td class="xl67" width="87" style="width:65pt">-b</td>  <td class="xl68" width="87" style="width:65pt">Broker 地址，地址为ip:port</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl67" width="87" style="height:43.0pt;width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="57" style="height:43.0pt">  <td rowspan="3" height="137" class="xl69" width="191" style="border-bottom:1.0pt;  height:103.0pt;border-top:none;width:143pt">wipeWritePerm</td>  <td rowspan="3" class="xl72" width="87" style="border-bottom:1.0pt  border-top:none;width:65pt">从NameServer上清除 Broker写权限</td>  <td class="xl67" width="87" style="width:65pt">-b</td>  <td class="xl68" width="87" style="width:65pt">Broker 地址，地址为ip:port</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl67" width="87" style="height:43.0pt;width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td rowspan="4" height="160" class="xl69" width="191" style="border-bottom:1.0pt;  height:120.0pt;border-top:none;width:143pt">cleanExpiredCQ</td>  <td rowspan="4" class="xl72" width="87" style="border-bottom:1.0pt  border-top:none;width:65pt">清理Broker上过期的Consume Queue，如果手动减少对列数可能产生过期队列</td>  <td class="xl67" width="87" style="width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl67" width="87" style="height:43.0pt;width:65pt">-b</td>  <td class="xl68" width="87" style="width:65pt">Broker 地址，地址为ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-c</td>  <td class="xl68" width="87" style="width:65pt">集群名称</td> </tr> <tr height="88" style="mso-height-source:userset;height:66.0pt">  <td rowspan="4" height="191" class="xl69" width="191" style="border-bottom:1.0pt;  height:143.0pt;border-top:none;width:143pt">cleanUnusedTopic</td>  <td rowspan="4" class="xl72" width="87" style="border-bottom:1.0pt  border-top:none;width:65pt">清理Broker上不使用的Topic，从内存中释放Topic的Consume  Queue，如果手动删除Topic会产生不使用的Topic</td>  <td class="xl67" width="87" style="width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl67" width="87" style="height:43.0pt;width:65pt">-b</td>  <td class="xl68" width="87" style="width:65pt">Broker 地址，地址为ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-c</td>  <td class="xl68" width="87" style="width:65pt">集群名称</td> </tr> <tr height="57" style="height:43.0pt">  <td rowspan="5" height="199" class="xl69" width="191" style="border-bottom:1.0pt;  height:149.0pt;border-top:none;width:143pt">sendMsgStatus</td>  <td rowspan="5" class="xl72" width="87" style="border-bottom:1.0pt  border-top:none;width:65pt">向Broker发消息，返回发送状态和RT</td>  <td class="xl67" width="87" style="width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl67" width="87" style="height:43.0pt;width:65pt">-b</td>  <td class="xl68" width="87" style="width:65pt">BrokerName，注意不同于Broker地址</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl67" width="87" style="height:29.0pt;width:65pt">-s</td>  <td class="xl68" width="87" style="width:65pt">消息大小，单位B</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-c</td>  <td class="xl68" width="87" style="width:65pt">发送次数</td> </tr></table><p>####4）消息相关</p><table border="0" cellpadding="0" cellspacing="0" width="714"> <col width="177"> <col width="175"> <col width="177"> <col width="185"><tr height="23" style="height:17.0pt">  <td height="23" class="xl63" width="177" style="height:17.0pt;width:133pt">名称</td>  <td class="xl64" width="175" style="width:131pt">含义</td>  <td class="xl64" width="177" style="width:133pt">命令选项</td>  <td class="xl64" width="185" style="width:139pt">说明</td> </tr> <tr height="128" style="height:96.0pt">  <td rowspan="3" height="208" class="xl69" width="87" style="border-bottom:1.0pt;  height:156.0pt;border-top:none;width:65pt">queryMsgById</td>  <td rowspan="3" class="xl72" width="87" style="border-bottom:1.0pt;  border-top:none;width:65pt">根据offsetMsgId查询msg，如果使用开源控制台，应使用offsetMsgId，此命令还有其他参数，具体作用请阅读QueryMsgByIdSubCommand。</td>  <td class="xl67" width="87" style="width:65pt">-i</td>  <td class="xl67" width="87" style="width:65pt">msgId</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl67" width="87" style="height:43.0pt;width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td rowspan="4" height="126" class="xl69" width="87" style="border-bottom:1.0pt;  height:94.0pt;border-top:none;width:65pt">queryMsgByKey</td>  <td rowspan="4" class="xl72" width="87" style="border-bottom:1.0pt;  border-top:none;width:65pt">根据消息 Key 查询消息</td>  <td class="xl67" width="87" style="width:65pt">-k</td>  <td class="xl67" width="87" style="width:65pt">msgKey</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-t</td>  <td class="xl68" width="87" style="width:65pt">Topic 名称</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl67" width="87" style="height:43.0pt;width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="225" style="height:169.0pt">  <td rowspan="6" height="390" class="xl69" width="87" style="border-bottom:1.0pt;  height:292.0pt;border-top:none;width:65pt">queryMsgByOffset</td>  <td rowspan="6" class="xl72" width="87" style="border-bottom:1.0pt;  border-top:none;width:65pt">根据 Offset 查询消息</td>  <td class="xl67" width="87" style="width:65pt">-b</td>  <td class="xl68" width="87" style="width:65pt">Broker 名称，（这里需要注意  填写的是 Broker 的名称，不是 Broker 的地址，Broker 名称可以在 clusterList 查到）</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl67" width="87" style="height:29.0pt;width:65pt">-i</td>  <td class="xl68" width="87" style="width:65pt">query 队列 id</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-o</td>  <td class="xl68" width="87" style="width:65pt">offset 值</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-t</td>  <td class="xl68" width="87" style="width:65pt">topic 名称</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl67" width="87" style="height:43.0pt;width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="47">  <td rowspan="6" height="209" class="xl69" width="87" style="border-bottom:1.0pt;  height:156.0pt;border-top:none;width:65pt">queryMsgByUniqueKey</td>  <td rowspan="6" class="xl72" width="87" style="border-bottom:1.0pt;  border-top:none;width:65pt">根据msgId查询，msgId不同于offsetMsgId，区别详见常见运维问题。-g，-d配合使用，查到消息后尝试让特定的消费者消费消息并返回消费结果</td>  <td class="xl67" width="87" style="width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl67" width="87" style="height:43.0pt;width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-i</td>  <td class="xl67" width="87" style="width:65pt">uniqe msg id</td> </tr> <tr height="36" style="height:27.0pt">  <td height="36" class="xl67" width="87" style="height:27.0pt;width:65pt">-g</td>  <td class="xl67" width="87" style="width:65pt">consumerGroup</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-d</td>  <td class="xl67" width="87" style="width:65pt">clientId</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-t</td>  <td class="xl68" width="87" style="width:65pt">topic名称</td> </tr> <tr height="23" style="height:17.0pt">  <td rowspan="5" height="149" class="xl69" width="87" style="border-bottom:1.0pt  height:111.0pt;border-top:none;width:65pt">checkMsgSendRT</td>  <td rowspan="5" class="xl72" width="87" style="border-bottom:1.0pt;  border-top:none;width:65pt">检测向topic发消息的RT，功能类似clusterRT</td>  <td class="xl67" width="87" style="width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl67" width="87" style="height:43.0pt;width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-t</td>  <td class="xl68" width="87" style="width:65pt">topic名称</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-a</td>  <td class="xl68" width="87" style="width:65pt">探测次数</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-s</td>  <td class="xl68" width="87" style="width:65pt">消息大小</td> </tr> <tr height="23" style="height:17.0pt">  <td rowspan="8" height="218" class="xl69" width="87" style="border-bottom:1.0pt;  height:162.0pt;border-top:none;width:65pt">sendMessage</td>  <td rowspan="8" class="xl72" width="87" style="border-bottom:1.0pt;  border-top:none;width:65pt">发送一条消息，可以根据配置发往特定Message Queue，或普通发送。</td>  <td class="xl67" width="87" style="width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl67" width="87" style="height:43.0pt;width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-t</td>  <td class="xl68" width="87" style="width:65pt">topic名称</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-p</td>  <td class="xl68" width="87" style="width:65pt">body，消息体</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-k</td>  <td class="xl67" width="87" style="width:65pt">keys</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-c</td>  <td class="xl67" width="87" style="width:65pt">tags</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-b</td>  <td class="xl67" width="87" style="width:65pt">BrokerName</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-i</td>  <td class="xl67" width="87" style="width:65pt">queueId</td> </tr> <tr height="23" style="height:17.0pt">  <td rowspan="10" height="312" class="xl69" width="87" style="border-bottom:1.0pt;  height:232.0pt;border-top:none;width:65pt">consumeMessage</td>  <td rowspan="10" class="xl72" width="87" style="border-bottom:1.0pt;  border-top:none;width:65pt">消费消息。可以根据offset、开始&amp;结束时间戳、消息队列消费消息，配置不同执行不同消费逻辑，详见ConsumeMessageCommand。</td>  <td class="xl67" width="87" style="width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl67" width="87" style="height:43.0pt;width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-t</td>  <td class="xl68" width="87" style="width:65pt">topic名称</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-b</td>  <td class="xl67" width="87" style="width:65pt">BrokerName</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl67" width="87" style="height:29.0pt;width:65pt">-o</td>  <td class="xl68" width="87" style="width:65pt">从offset开始消费</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-i</td>  <td class="xl67" width="87" style="width:65pt">queueId</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-g</td>  <td class="xl68" width="87" style="width:65pt">消费者分组</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl67" width="87" style="height:29.0pt;width:65pt">-s</td>  <td class="xl68" width="87" style="width:65pt">开始时间戳，格式详见-h</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-d</td>  <td class="xl68" width="87" style="width:65pt">结束时间戳</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl67" width="87" style="height:29.0pt;width:65pt">-c</td>  <td class="xl68" width="87" style="width:65pt">消费多少条消息</td> </tr> <tr height="23" style="height:17.0pt">  <td rowspan="8" height="282" class="xl69" width="87" style="border-bottom:1.0pt;  height:210.0pt;border-top:none;width:65pt">printMsg</td>  <td rowspan="8" class="xl72" width="87" style="border-bottom:1.0pt;  border-top:none;width:65pt">从Broker消费消息并打印，可选时间段</td>  <td class="xl67" width="87" style="width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl67" width="87" style="height:43.0pt;width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-t</td>  <td class="xl68" width="87" style="width:65pt">topic名称</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl67" width="87" style="height:29.0pt;width:65pt">-c</td>  <td class="xl68" width="87" style="width:65pt">字符集，例如UTF-8</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl67" width="87" style="height:29.0pt;width:65pt">-s</td>  <td class="xl68" width="87" style="width:65pt">subExpress，过滤表达式</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl67" width="87" style="height:29.0pt;width:65pt">-b</td>  <td class="xl68" width="87" style="width:65pt">开始时间戳，格式参见-h</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-e</td>  <td class="xl68" width="87" style="width:65pt">结束时间戳</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl67" width="87" style="height:29.0pt;width:65pt">-d</td>  <td class="xl68" width="87" style="width:65pt">是否打印消息体</td> </tr> <tr height="23" style="height:17.0pt">  <td rowspan="12" height="390" class="xl69" width="87" style="border-bottom:1.0pt;  height:290.0pt;border-top:none;width:65pt">printMsgByQueue</td>  <td rowspan="12" class="xl72" width="87" style="border-bottom:1.0pt;  border-top:none;width:65pt">类似printMsg，但指定Message Queue</td>  <td class="xl67" width="87" style="width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl67" width="87" style="height:43.0pt;width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-t</td>  <td class="xl68" width="87" style="width:65pt">topic名称</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-i</td>  <td class="xl67" width="87" style="width:65pt">queueId</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-a</td>  <td class="xl67" width="87" style="width:65pt">BrokerName</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl67" width="87" style="height:29.0pt;width:65pt">-c</td>  <td class="xl68" width="87" style="width:65pt">字符集，例如UTF-8</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl67" width="87" style="height:29.0pt;width:65pt">-s</td>  <td class="xl68" width="87" style="width:65pt">subExpress，过滤表达式</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl67" width="87" style="height:29.0pt;width:65pt">-b</td>  <td class="xl68" width="87" style="width:65pt">开始时间戳，格式参见-h</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-e</td>  <td class="xl68" width="87" style="width:65pt">结束时间戳</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-p</td>  <td class="xl68" width="87" style="width:65pt">是否打印消息</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl67" width="87" style="height:29.0pt;width:65pt">-d</td>  <td class="xl68" width="87" style="width:65pt">是否打印消息体</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl67" width="87" style="height:29.0pt;width:65pt">-f</td>  <td class="xl68" width="87" style="width:65pt">是否统计tag数量并打印</td> </tr> <tr height="23" style="height:17.0pt">  <td rowspan="7" height="410" class="xl69" width="87" style="border-bottom:1.0pt;  height:307.0pt;border-top:none;width:65pt">resetOffsetByTime</td>  <td rowspan="7" class="xl72" width="87" style="border-bottom:1.0pt;  border-top:none;width:65pt">按时间戳重置offset，Broker和consumer都会重置</td>  <td class="xl67" width="87" style="width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl67" width="87" style="height:43.0pt;width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-g</td>  <td class="xl68" width="87" style="width:65pt">消费者分组</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-t</td>  <td class="xl68" width="87" style="width:65pt">topic名称</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl67" width="87" style="height:43.0pt;width:65pt">-s</td>  <td class="xl68" width="87" style="width:65pt">重置为此时间戳对应的offset</td> </tr> <tr height="188" style="height:141.0pt">  <td height="188" class="xl67" width="87" style="height:141.0pt;width:65pt">-f</td>  <td class="xl68" width="87" style="width:65pt">是否强制重置，如果false，只支持回溯offset，如果true，不管时间戳对应offset与consumeOffset关系</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl67" width="87" style="height:29.0pt;width:65pt">-c</td>  <td class="xl68" width="87" style="width:65pt">是否重置c++客户端offset</td> </tr></table><h4 id="5）消费者、消费组相关"><a href="#5）消费者、消费组相关" class="headerlink" title="5）消费者、消费组相关"></a>5）消费者、消费组相关</h4><table border="0" cellpadding="0" cellspacing="0" width="714"> <col width="177"> <col width="175"> <col width="177"> <col width="185"><tr height="23" style="height:17.0pt">  <td height="23" class="xl63" width="177" style="height:17.0pt;width:133pt">名称</td>  <td class="xl64" width="175" style="width:131pt">含义</td>  <td class="xl64" width="177" style="width:133pt">命令选项</td>  <td class="xl64" width="185" style="width:139pt">说明</td> </tr> <tr height="39" style="height:29.0pt">  <td rowspan="4" height="158" class="xl69" width="87" style="border-bottom:1.0pt;  height:110pt;border-top:none;width:65pt">consumerProgress</td>  <td rowspan="4" class="xl72" width="87" style="border-bottom:1.0pt;  border-top:none;width:65pt">查看订阅组消费状态，可以查看具体的client IP的消息积累量</td>  <td class="xl67" width="87" style="width:65pt">-g</td>  <td class="xl68" width="87" style="width:65pt">消费者所属组名</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl67" width="87" style="height:29.0pt;width:65pt">-s</td>  <td class="xl68" width="87" style="width:65pt">是否打印client IP</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl67" width="87" style="height:43.0pt;width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="105" style="mso-height-source:userset;height:79.0pt">  <td rowspan="5" height="260" class="xl69" width="87" style="border-bottom:1.0pt;  height:195.0pt;border-top:none;width:65pt">consumerStatus</td>  <td rowspan="5" class="xl72" width="87" style="border-bottom:1.0pt  border-top:none;width:65pt">查看消费者状态，包括同一个分组中是否都是相同的订阅，分析Process  Queue是否堆积，返回消费者jstack结果，内容较多，使用者参见ConsumerStatusSubCommand</td>  <td class="xl67" width="87" style="width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl67" width="87" style="height:43.0pt;width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="36" style="height:27.0pt">  <td height="36" class="xl67" width="87" style="height:27.0pt;width:65pt">-g</td>  <td class="xl67" width="87" style="width:65pt">consumer group</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-i</td>  <td class="xl67" width="87" style="width:65pt">clientId</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl67" width="87" style="height:29.0pt;width:65pt">-s</td>  <td class="xl68" width="87" style="width:65pt">是否执行jstack</td> </tr> <tr height="39" style="height:29.0pt">  <td rowspan="5" height="181" class="xl69" width="87" style="border-bottom:1.0pt  height:135.0pt;border-top:none;width:65pt">getConsumerStatus</td>  <td rowspan="5" class="xl72" width="87" style="border-bottom:1.0pt  border-top:none;width:65pt">获取 Consumer 消费进度</td>  <td class="xl67" width="87" style="width:65pt">-g</td>  <td class="xl68" width="87" style="width:65pt">消费者所属组名</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-t</td>  <td class="xl68" width="87" style="width:65pt">查询主题</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl67" width="87" style="height:29.0pt;width:65pt">-i</td>  <td class="xl68" width="87" style="width:65pt">Consumer 客户端 ip</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl67" width="87" style="height:43.0pt;width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td rowspan="13" height="761" class="xl69" width="87" style="border-bottom:1.0pt  height:569.0pt;border-top:none;width:65pt">updateSubGroup</td>  <td rowspan="13" class="xl72" width="87" style="border-bottom:1.0pt  border-top:none;width:65pt">更新或创建订阅关系</td>  <td class="xl67" width="87" style="width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-b</td>  <td class="xl68" width="87" style="width:65pt">Broker地址</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-c</td>  <td class="xl68" width="87" style="width:65pt">集群名称</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl67" width="87" style="height:29.0pt;width:65pt">-g</td>  <td class="xl68" width="87" style="width:65pt">消费者分组名称</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl67" width="87" style="height:29.0pt;width:65pt">-s</td>  <td class="xl68" width="87" style="width:65pt">分组是否允许消费</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl67" width="87" style="height:43.0pt;width:65pt">-m</td>  <td class="xl68" width="87" style="width:65pt">是否从最小offset开始消费</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl67" width="87" style="height:29.0pt;width:65pt">-d</td>  <td class="xl68" width="87" style="width:65pt">是否是广播模式</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-q</td>  <td class="xl68" width="87" style="width:65pt">重试队列数量</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-r</td>  <td class="xl68" width="87" style="width:65pt">最大重试次数</td> </tr> <tr height="207" style="height:155.0pt">  <td height="207" class="xl67" width="87" style="height:155.0pt;width:65pt">-i</td>  <td class="xl68" width="87" style="width:65pt">当slaveReadEnable开启时有效，且还未达到从slave消费时建议从哪个BrokerId消费，可以配置备机id，主动从备机消费</td> </tr> <tr height="132" style="height:99.0pt">  <td height="132" class="xl67" width="87" style="height:99.0pt;width:65pt">-w</td>  <td class="xl68" width="87" style="width:65pt">如果Broker建议从slave消费，配置决定从哪个slave消费，配置BrokerId，例如1</td> </tr> <tr height="76" style="height:57.0pt">  <td height="76" class="xl67" width="87" style="height:57.0pt;width:65pt">-a</td>  <td class="xl68" width="87" style="width:65pt">当消费者数量变化时是否通知其他消费者负载均衡</td> </tr> <tr height="57" style="height:43.0pt">  <td rowspan="5" height="165" class="xl69" width="87" style="border-bottom:1.0pt  height:123.0pt;border-top:none;width:65pt">deleteSubGroup</td>  <td rowspan="5" class="xl72" width="87" style="border-bottom:1.0pt  border-top:none;width:65pt">从Broker删除订阅关系</td>  <td class="xl67" width="87" style="width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-b</td>  <td class="xl68" width="87" style="width:65pt">Broker地址</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-c</td>  <td class="xl68" width="87" style="width:65pt">集群名称</td> </tr> <tr height="39" style="height:29.0pt">  <td height="39" class="xl67" width="87" style="height:29.0pt;width:65pt">-g</td>  <td class="xl68" width="87" style="width:65pt">消费者分组名称</td> </tr> <tr height="57" style="height:43.0pt">  <td rowspan="6" height="172" class="xl69" width="87" style="border-bottom:1.0pt  height:120pt;border-top:none;width:65pt">cloneGroupOffset</td>  <td rowspan="6" class="xl72" width="87" style="border-bottom:1.0pt  border-top:none;width:65pt">在目标群组中使用源群组的offset</td>  <td class="xl67" width="87" style="width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-s</td>  <td class="xl68" width="87" style="width:65pt">源消费者组</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-d</td>  <td class="xl68" width="87" style="width:65pt">目标消费者组</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-t</td>  <td class="xl68" width="87" style="width:65pt">topic名称</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-o</td>  <td class="xl68" width="87" style="width:65pt">暂未使用</td> </tr></table><h4 id="6）连接相关"><a href="#6）连接相关" class="headerlink" title="6）连接相关"></a>6）连接相关</h4><table border="0" cellpadding="0" cellspacing="0" width="714"> <col width="177"> <col width="175"> <col width="177"> <col width="185"><tr height="23" style="height:17.0pt">  <td height="23" class="xl63" width="177" style="height:17.0pt;width:133pt">名称</td>  <td class="xl64" width="175" style="width:131pt">含义</td>  <td class="xl64" width="177" style="width:133pt">命令选项</td>  <td class="xl64" width="185" style="width:139pt">说明</td> </tr> <tr height="39" style="height:29.0pt">  <td rowspan="3" height="119" class="xl69" width="87" style="border-bottom:1.0pt  height:89.0pt;border-top:none;width:65pt">consumerConnec tion</td>  <td rowspan="3" class="xl72" width="87" style="border-bottom:1.0pt  border-top:none;width:65pt">查询 Consumer 的网络连接</td>  <td class="xl67" width="87" style="width:65pt">-g</td>  <td class="xl68" width="87" style="width:65pt">消费者所属组名</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl67" width="87" style="height:43.0pt;width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr> <tr height="39" style="height:29.0pt">  <td rowspan="4" height="142" class="xl69" width="87" style="border-bottom:1.0pt  height:106.0pt;border-top:none;width:65pt">producerConnec tion</td>  <td rowspan="4" class="xl72" width="87" style="border-bottom:1.0pt  border-top:none;width:65pt">查询 Producer 的网络连接</td>  <td class="xl67" width="87" style="width:65pt">-g</td>  <td class="xl68" width="87" style="width:65pt">生产者所属组名</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-t</td>  <td class="xl68" width="87" style="width:65pt">主题名称</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl67" width="87" style="height:43.0pt;width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr></table><h4 id="7）NameServer相关"><a href="#7）NameServer相关" class="headerlink" title="7）NameServer相关"></a>7）NameServer相关</h4><table border="0" cellpadding="0" cellspacing="0" width="714"> <col width="177"> <col width="175"> <col width="177"> <col width="185"><tr height="23" style="height:17.0pt">  <td height="23" class="xl63" width="177" style="height:17.0pt;width:133pt">名称</td>  <td class="xl64" width="175" style="width:131pt">含义</td>  <td class="xl64" width="177" style="width:133pt">命令选项</td>  <td class="xl64" width="185" style="width:139pt">说明</td> </tr> <tr height="21" style="height:16.0pt">  <td rowspan="5" height="143" class="xl69" width="87" style="border-bottom:1.0pt  height:100pt;border-top:none;width:65pt">updateKvConfig</td>  <td rowspan="5" class="xl72" width="87" style="border-bottom:1.0pt  border-top:none;width:65pt">更新NameServer的kv配置，目前还未使用</td>  <td class="xl75" width="87" style="width:65pt">-s</td>  <td class="xl76" width="87" style="width:65pt">命名空间</td> </tr> <tr height="21" style="height:16.0pt">  <td height="21" class="xl75" width="87" style="height:16.0pt;width:65pt">-k</td>  <td class="xl75" width="87" style="width:65pt">key</td> </tr> <tr height="21" style="height:16.0pt">  <td height="21" class="xl75" width="87" style="height:16.0pt;width:65pt">-v</td>  <td class="xl75" width="87" style="width:65pt">value</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl67" width="87" style="height:43.0pt;width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr> <tr height="23" style="height:17.0pt">  <td rowspan="4" height="126" class="xl69" width="87" style="border-bottom:1.0pt  height:94.0pt;border-top:none;width:65pt">deleteKvConfig</td>  <td rowspan="4" class="xl72" width="87" style="border-bottom:1.0pt  border-top:none;width:65pt">删除NameServer的kv配置</td>  <td class="xl67" width="87" style="width:65pt">-s</td>  <td class="xl68" width="87" style="width:65pt">命名空间</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-k</td>  <td class="xl67" width="87" style="width:65pt">key</td> </tr> <tr height="57" style="height:43.0pt">  <td height="57" class="xl67" width="87" style="height:43.0pt;width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td rowspan="2" height="80" class="xl69" width="87" style="border-bottom:1.0pt  height:60.0pt;border-top:none;width:65pt">getNamesrvConfig</td>  <td rowspan="2" class="xl72" width="87" style="border-bottom:1.0pt  border-top:none;width:65pt">获取NameServer配置</td>  <td class="xl67" width="87" style="width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr> <tr height="57" style="height:43.0pt">  <td rowspan="4" height="126" class="xl69" width="87" style="border-bottom:1.0pt  height:94.0pt;border-top:none;width:65pt">updateNamesrvConfig</td>  <td rowspan="4" class="xl72" width="87" style="border-bottom:1.0pt  border-top:none;width:65pt">修改NameServer配置</td>  <td class="xl67" width="87" style="width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-k</td>  <td class="xl67" width="87" style="width:65pt">key</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-v</td>  <td class="xl67" width="87" style="width:65pt">value</td> </tr></table><h4 id="8）其他"><a href="#8）其他" class="headerlink" title="8）其他"></a>8）其他</h4><table border="0" cellpadding="0" cellspacing="0" width="714"> <col width="177"> <col width="175"> <col width="177"> <col width="185"><tr height="23" style="height:17.0pt">  <td height="23" class="xl63" width="177" style="height:17.0pt;width:133pt">名称</td>  <td class="xl64" width="175" style="width:131pt">含义</td>  <td class="xl64" width="177" style="width:133pt">命令选项</td>  <td class="xl64" width="185" style="width:139pt">说明</td> </tr> <tr height="57" style="height:43.0pt">  <td rowspan="2" height="80" class="xl69" width="87" style="border-bottom:1.0pt  height:60.0pt;border-top:none;width:65pt">startMonitoring</td>  <td rowspan="2" class="xl71" width="87" style="border-bottom:1.0pt  border-top:none;width:65pt">开启监控进程，监控消息误删、重试队列消息数等</td>  <td class="xl67" width="87" style="width:65pt">-n</td>  <td class="xl68" width="87" style="width:65pt">NameServer 服务地址，格式 ip:port</td> </tr> <tr height="23" style="height:17.0pt">  <td height="23" class="xl67" width="87" style="height:17.0pt;width:65pt">-h</td>  <td class="xl68" width="87" style="width:65pt">打印帮助</td> </tr></table><h3 id="3-4-3-注意事项"><a href="#3-4-3-注意事项" class="headerlink" title="3.4.3 注意事项"></a>3.4.3 注意事项</h3><ul><li>几乎所有命令都需要配置-n表示NameServer地址，格式为ip:port</li><li>几乎所有命令都可以通过-h获取帮助</li><li>如果既有Broker地址（-b）配置项又有clusterName（-c）配置项，则优先以Broker地址执行命令；如果不配置Broker地址，则对集群中所有主机执行命令</li></ul><h2 id="3-5-集群监控平台搭建"><a href="#3-5-集群监控平台搭建" class="headerlink" title="3.5 集群监控平台搭建"></a>3.5 集群监控平台搭建</h2><h3 id="3-5-1-概述"><a href="#3-5-1-概述" class="headerlink" title="3.5.1 概述"></a>3.5.1 概述</h3><p><code>RocketMQ</code>有一个对其扩展的开源项目<a href="https://github.com/apache/rocketmq-externals">incubator-rocketmq-externals</a>，这个项目中有一个子模块叫<code>rocketmq-console</code>，这个便是管理控制台项目了，先将<a href="https://github.com/apache/rocketmq-externals">incubator-rocketmq-externals</a>拉到本地，因为我们需要自己对<code>rocketmq-console</code>进行编译打包运行。</p><p><img src="/2021/06/17/rocketmq%E4%BB%8B%E7%BB%8D/rocketmq-console.png"></p><h3 id="3-5-2-下载并编译打包"><a href="#3-5-2-下载并编译打包" class="headerlink" title="3.5.2 下载并编译打包"></a>3.5.2 下载并编译打包</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/apache/rocketmq-externals</span><br><span class="line"><span class="built_in">cd</span> rocketmq-console</span><br><span class="line">mvn clean package -Dmaven.test.skip=<span class="literal">true</span></span><br></pre></td></tr></table></figure><p>注意：打包前在<code>rocketmq-console</code>中配置<code>namesrv</code>集群地址：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rocketmq.config.namesrvAddr=192.168.25.135:9876;192.168.25.138:9876</span><br></pre></td></tr></table></figure><p>启动rocketmq-console：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar rocketmq-console-ng-1.0.0.jar</span><br></pre></td></tr></table></figure><p>启动成功后，我们就可以通过浏览器访问<code>http://localhost:8080</code>进入控制台界面了，如下图：</p><p><img src="/2021/06/17/rocketmq%E4%BB%8B%E7%BB%8D/rocketmq-console2.png"></p><p>集群状态：</p><p><img src="/2021/06/17/rocketmq%E4%BB%8B%E7%BB%8D/rocketmq-console3.png"></p><h1 id="4-消息发送样例"><a href="#4-消息发送样例" class="headerlink" title="4. 消息发送样例"></a>4. 消息发送样例</h1><ul><li>导入MQ客户端依赖</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.rocketmq<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>rocketmq-client<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.4.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>消息发送者步骤分析r</li></ul><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1.创建消息生产者producer，并制定生产者组名</span><br><span class="line">2.指定Nameserver地址</span><br><span class="line">3.启动producer</span><br><span class="line">4.创建消息对象，指定主题Topic、Tag和消息体</span><br><span class="line">5.发送消息</span><br><span class="line">6.关闭生产者producer</span><br></pre></td></tr></table></figure><ul><li>消息消费者步骤分析</li></ul><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1.创建消费者Consumer，制定消费者组名</span><br><span class="line">2.指定Nameserver地址</span><br><span class="line">3.订阅主题Topic和Tag</span><br><span class="line">4.设置回调函数，处理消息</span><br><span class="line">5.启动消费者consumer</span><br></pre></td></tr></table></figure><h2 id="4-1-基本样例"><a href="#4-1-基本样例" class="headerlink" title="4.1 基本样例"></a>4.1 基本样例</h2><h3 id="4-1-1-消息发送"><a href="#4-1-1-消息发送" class="headerlink" title="4.1.1 消息发送"></a>4.1.1 消息发送</h3><h4 id="1）发送同步消息"><a href="#1）发送同步消息" class="headerlink" title="1）发送同步消息"></a>1）发送同步消息</h4><p>这种可靠性同步地发送方式使用的比较广泛，比如：重要的消息通知，短信通知。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SyncProducer</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">// 实例化消息生产者Producer</span></span><br><span class="line">        DefaultMQProducer producer = <span class="keyword">new</span> DefaultMQProducer(<span class="string">&quot;please_rename_unique_group_name&quot;</span>);</span><br><span class="line">    <span class="comment">// 设置NameServer的地址</span></span><br><span class="line">    producer.setNamesrvAddr(<span class="string">&quot;localhost:9876&quot;</span>);</span><br><span class="line">    <span class="comment">// 启动Producer实例</span></span><br><span class="line">        producer.start();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">        <span class="comment">// 创建消息，并指定Topic，Tag和消息体</span></span><br><span class="line">        Message msg = <span class="keyword">new</span> Message(<span class="string">&quot;TopicTest&quot;</span> <span class="comment">/* Topic */</span>,</span><br><span class="line">        <span class="string">&quot;TagA&quot;</span> <span class="comment">/* Tag */</span>,</span><br><span class="line">        (<span class="string">&quot;Hello RocketMQ &quot;</span> + i).getBytes(RemotingHelper.DEFAULT_CHARSET) <span class="comment">/* Message body */</span></span><br><span class="line">        );</span><br><span class="line">        <span class="comment">// 发送消息到一个Broker</span></span><br><span class="line">            SendResult sendResult = producer.send(msg);</span><br><span class="line">            <span class="comment">// 通过sendResult返回消息是否成功送达</span></span><br><span class="line">            System.out.printf(<span class="string">&quot;%s%n&quot;</span>, sendResult);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 如果不再发送消息，关闭Producer实例。</span></span><br><span class="line">    producer.shutdown();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2）发送异步消息"><a href="#2）发送异步消息" class="headerlink" title="2）发送异步消息"></a>2）发送异步消息</h4><p>异步消息通常用在对响应时间敏感的业务场景，即发送端不能容忍长时间地等待Broker的响应。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AsyncProducer</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">// 实例化消息生产者Producer</span></span><br><span class="line">        DefaultMQProducer producer = <span class="keyword">new</span> DefaultMQProducer(<span class="string">&quot;please_rename_unique_group_name&quot;</span>);</span><br><span class="line">    <span class="comment">// 设置NameServer的地址</span></span><br><span class="line">        producer.setNamesrvAddr(<span class="string">&quot;localhost:9876&quot;</span>);</span><br><span class="line">    <span class="comment">// 启动Producer实例</span></span><br><span class="line">        producer.start();</span><br><span class="line">        producer.setRetryTimesWhenSendAsyncFailed(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">final</span> <span class="keyword">int</span> index = i;</span><br><span class="line">            <span class="comment">// 创建消息，并指定Topic，Tag和消息体</span></span><br><span class="line">                Message msg = <span class="keyword">new</span> Message(<span class="string">&quot;TopicTest&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;TagA&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;OrderID188&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;Hello world&quot;</span>.getBytes(RemotingHelper.DEFAULT_CHARSET));</span><br><span class="line">                <span class="comment">// SendCallback接收异步返回结果的回调</span></span><br><span class="line">                producer.send(msg, <span class="keyword">new</span> SendCallback() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(SendResult sendResult)</span> </span>&#123;</span><br><span class="line">                        System.out.printf(<span class="string">&quot;%-10d OK %s %n&quot;</span>, index,</span><br><span class="line">                            sendResult.getMsgId());</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onException</span><span class="params">(Throwable e)</span> </span>&#123;</span><br><span class="line">                    System.out.printf(<span class="string">&quot;%-10d Exception %s %n&quot;</span>, index, e);</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                    &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 如果不再发送消息，关闭Producer实例。</span></span><br><span class="line">    producer.shutdown();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3）单向发送消息"><a href="#3）单向发送消息" class="headerlink" title="3）单向发送消息"></a>3）单向发送消息</h4><p>这种方式主要用在不特别关心发送结果的场景，例如日志发送。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">OnewayProducer</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line">    <span class="comment">// 实例化消息生产者Producer</span></span><br><span class="line">        DefaultMQProducer producer = <span class="keyword">new</span> DefaultMQProducer(<span class="string">&quot;please_rename_unique_group_name&quot;</span>);</span><br><span class="line">    <span class="comment">// 设置NameServer的地址</span></span><br><span class="line">        producer.setNamesrvAddr(<span class="string">&quot;localhost:9876&quot;</span>);</span><br><span class="line">    <span class="comment">// 启动Producer实例</span></span><br><span class="line">        producer.start();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">100</span>; i++) &#123;</span><br><span class="line">        <span class="comment">// 创建消息，并指定Topic，Tag和消息体</span></span><br><span class="line">        Message msg = <span class="keyword">new</span> Message(<span class="string">&quot;TopicTest&quot;</span> <span class="comment">/* Topic */</span>,</span><br><span class="line">                <span class="string">&quot;TagA&quot;</span> <span class="comment">/* Tag */</span>,</span><br><span class="line">                (<span class="string">&quot;Hello RocketMQ &quot;</span> + i).getBytes(RemotingHelper.DEFAULT_CHARSET) <span class="comment">/* Message body */</span></span><br><span class="line">        );</span><br><span class="line">        <span class="comment">// 发送单向消息，没有任何返回结果</span></span><br><span class="line">        producer.sendOneway(msg);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 如果不再发送消息，关闭Producer实例。</span></span><br><span class="line">    producer.shutdown();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-1-2-消费消息"><a href="#4-1-2-消费消息" class="headerlink" title="4.1.2 消费消息"></a>4.1.2 消费消息</h3><h4 id="1）负载均衡模式"><a href="#1）负载均衡模式" class="headerlink" title="1）负载均衡模式"></a>1）负载均衡模式</h4><p>消费者采用负载均衡方式消费消息，多个消费者共同消费队列消息，每个消费者处理的消息不同</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">// 实例化消息生产者,指定组名</span></span><br><span class="line">    DefaultMQPushConsumer consumer = <span class="keyword">new</span> DefaultMQPushConsumer(<span class="string">&quot;group1&quot;</span>);</span><br><span class="line">    <span class="comment">// 指定Namesrv地址信息.</span></span><br><span class="line">    consumer.setNamesrvAddr(<span class="string">&quot;localhost:9876&quot;</span>);</span><br><span class="line">    <span class="comment">// 订阅Topic</span></span><br><span class="line">    consumer.subscribe(<span class="string">&quot;Test&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">    <span class="comment">//负载均衡模式消费</span></span><br><span class="line">    consumer.setMessageModel(MessageModel.CLUSTERING);</span><br><span class="line">    <span class="comment">// 注册回调函数，处理消息</span></span><br><span class="line">    consumer.registerMessageListener(<span class="keyword">new</span> MessageListenerConcurrently() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> ConsumeConcurrentlyStatus <span class="title">consumeMessage</span><span class="params">(List&lt;MessageExt&gt; msgs,</span></span></span><br><span class="line"><span class="params"><span class="function">                                                        ConsumeConcurrentlyContext context)</span> </span>&#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;%s Receive New Messages: %s %n&quot;</span>, </span><br><span class="line">                              Thread.currentThread().getName(), msgs);</span><br><span class="line">            <span class="keyword">return</span> ConsumeConcurrentlyStatus.CONSUME_SUCCESS;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//启动消息者</span></span><br><span class="line">    consumer.start();</span><br><span class="line">    System.out.printf(<span class="string">&quot;Consumer Started.%n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2）广播模式"><a href="#2）广播模式" class="headerlink" title="2）广播模式"></a>2）广播模式</h4><p>消费者采用广播的方式消费消息，每个消费者消费的消息都是相同的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">// 实例化消息生产者,指定组名</span></span><br><span class="line">    DefaultMQPushConsumer consumer = <span class="keyword">new</span> DefaultMQPushConsumer(<span class="string">&quot;group1&quot;</span>);</span><br><span class="line">    <span class="comment">// 指定Namesrv地址信息.</span></span><br><span class="line">    consumer.setNamesrvAddr(<span class="string">&quot;localhost:9876&quot;</span>);</span><br><span class="line">    <span class="comment">// 订阅Topic</span></span><br><span class="line">    consumer.subscribe(<span class="string">&quot;Test&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">    <span class="comment">//广播模式消费</span></span><br><span class="line">    consumer.setMessageModel(MessageModel.BROADCASTING);</span><br><span class="line">    <span class="comment">// 注册回调函数，处理消息</span></span><br><span class="line">    consumer.registerMessageListener(<span class="keyword">new</span> MessageListenerConcurrently() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> ConsumeConcurrentlyStatus <span class="title">consumeMessage</span><span class="params">(List&lt;MessageExt&gt; msgs,</span></span></span><br><span class="line"><span class="params"><span class="function">                                                        ConsumeConcurrentlyContext context)</span> </span>&#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;%s Receive New Messages: %s %n&quot;</span>, </span><br><span class="line">                              Thread.currentThread().getName(), msgs);</span><br><span class="line">            <span class="keyword">return</span> ConsumeConcurrentlyStatus.CONSUME_SUCCESS;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="comment">//启动消息者</span></span><br><span class="line">    consumer.start();</span><br><span class="line">    System.out.printf(<span class="string">&quot;Consumer Started.%n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-2-顺序消息"><a href="#4-2-顺序消息" class="headerlink" title="4.2 顺序消息"></a>4.2 顺序消息</h2><p>消息有序指的是可以按照消息的发送顺序来消费(FIFO)。RocketMQ可以严格的保证消息有序，可以分为分区有序或者全局有序。</p><p>顺序消费的原理解析，在默认的情况下消息发送会采取Round Robin轮询方式把消息发送到不同的queue(分区队列)；而消费消息的时候从多个queue上拉取消息，这种情况发送和消费是不能保证顺序。但是如果控制发送的顺序消息只依次发送到同一个queue中，消费的时候只从这个queue上依次拉取，则就保证了顺序。当发送和消费参与的queue只有一个，则是全局有序；如果多个queue参与，则为分区有序，即相对每个queue，消息都是有序的。</p><p>下面用订单进行分区有序的示例。一个订单的顺序流程是：创建、付款、推送、完成。订单号相同的消息会被先后发送到同一个队列中，消费时，同一个OrderId获取到的肯定是同一个队列。</p><h3 id="4-2-1-顺序消息生产"><a href="#4-2-1-顺序消息生产" class="headerlink" title="4.2.1 顺序消息生产"></a>4.2.1 顺序消息生产</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* Producer，发送顺序消息</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Producer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">       DefaultMQProducer producer = <span class="keyword">new</span> DefaultMQProducer(<span class="string">&quot;please_rename_unique_group_name&quot;</span>);</span><br><span class="line"></span><br><span class="line">       producer.setNamesrvAddr(<span class="string">&quot;127.0.0.1:9876&quot;</span>);</span><br><span class="line"></span><br><span class="line">       producer.start();</span><br><span class="line"></span><br><span class="line">       String[] tags = <span class="keyword">new</span> String[]&#123;<span class="string">&quot;TagA&quot;</span>, <span class="string">&quot;TagC&quot;</span>, <span class="string">&quot;TagD&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">       <span class="comment">// 订单列表</span></span><br><span class="line">       List&lt;OrderStep&gt; orderList = <span class="keyword">new</span> Producer().buildOrders();</span><br><span class="line"></span><br><span class="line">       Date date = <span class="keyword">new</span> Date();</span><br><span class="line">       SimpleDateFormat sdf = <span class="keyword">new</span> SimpleDateFormat(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>);</span><br><span class="line">       String dateStr = sdf.format(date);</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) &#123;</span><br><span class="line">           <span class="comment">// 加个时间前缀</span></span><br><span class="line">           String body = dateStr + <span class="string">&quot; Hello RocketMQ &quot;</span> + orderList.get(i);</span><br><span class="line">           Message msg = <span class="keyword">new</span> Message(<span class="string">&quot;TopicTest&quot;</span>, tags[i % tags.length], <span class="string">&quot;KEY&quot;</span> + i, body.getBytes());</span><br><span class="line"></span><br><span class="line">           SendResult sendResult = producer.send(msg, <span class="keyword">new</span> MessageQueueSelector() &#123;</span><br><span class="line">               <span class="meta">@Override</span></span><br><span class="line">               <span class="function"><span class="keyword">public</span> MessageQueue <span class="title">select</span><span class="params">(List&lt;MessageQueue&gt; mqs, Message msg, Object arg)</span> </span>&#123;</span><br><span class="line">                   Long id = (Long) arg;  <span class="comment">//根据订单id选择发送queue</span></span><br><span class="line">                   <span class="keyword">long</span> index = id % mqs.size();</span><br><span class="line">                   <span class="keyword">return</span> mqs.get((<span class="keyword">int</span>) index);</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;, orderList.get(i).getOrderId());<span class="comment">//订单id</span></span><br><span class="line"></span><br><span class="line">           System.out.println(String.format(<span class="string">&quot;SendResult status:%s, queueId:%d, body:%s&quot;</span>,</span><br><span class="line">               sendResult.getSendStatus(),</span><br><span class="line">               sendResult.getMessageQueue().getQueueId(),</span><br><span class="line">               body));</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       producer.shutdown();</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 订单的步骤</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">OrderStep</span> </span>&#123;</span><br><span class="line">       <span class="keyword">private</span> <span class="keyword">long</span> orderId;</span><br><span class="line">       <span class="keyword">private</span> String desc;</span><br><span class="line"></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getOrderId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">           <span class="keyword">return</span> orderId;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOrderId</span><span class="params">(<span class="keyword">long</span> orderId)</span> </span>&#123;</span><br><span class="line">           <span class="keyword">this</span>.orderId = orderId;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="function"><span class="keyword">public</span> String <span class="title">getDesc</span><span class="params">()</span> </span>&#123;</span><br><span class="line">           <span class="keyword">return</span> desc;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDesc</span><span class="params">(String desc)</span> </span>&#123;</span><br><span class="line">           <span class="keyword">this</span>.desc = desc;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="meta">@Override</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="string">&quot;OrderStep&#123;&quot;</span> +</span><br><span class="line">               <span class="string">&quot;orderId=&quot;</span> + orderId +</span><br><span class="line">               <span class="string">&quot;, desc=&#x27;&quot;</span> + desc + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">               <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 生成模拟订单数据</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">private</span> List&lt;OrderStep&gt; <span class="title">buildOrders</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       List&lt;OrderStep&gt; orderList = <span class="keyword">new</span> ArrayList&lt;OrderStep&gt;();</span><br><span class="line"></span><br><span class="line">       OrderStep orderDemo = <span class="keyword">new</span> OrderStep();</span><br><span class="line">       orderDemo.setOrderId(<span class="number">15103111039L</span>);</span><br><span class="line">       orderDemo.setDesc(<span class="string">&quot;创建&quot;</span>);</span><br><span class="line">       orderList.add(orderDemo);</span><br><span class="line"></span><br><span class="line">       orderDemo = <span class="keyword">new</span> OrderStep();</span><br><span class="line">       orderDemo.setOrderId(<span class="number">15103111065L</span>);</span><br><span class="line">       orderDemo.setDesc(<span class="string">&quot;创建&quot;</span>);</span><br><span class="line">       orderList.add(orderDemo);</span><br><span class="line"></span><br><span class="line">       orderDemo = <span class="keyword">new</span> OrderStep();</span><br><span class="line">       orderDemo.setOrderId(<span class="number">15103111039L</span>);</span><br><span class="line">       orderDemo.setDesc(<span class="string">&quot;付款&quot;</span>);</span><br><span class="line">       orderList.add(orderDemo);</span><br><span class="line"></span><br><span class="line">       orderDemo = <span class="keyword">new</span> OrderStep();</span><br><span class="line">       orderDemo.setOrderId(<span class="number">15103117235L</span>);</span><br><span class="line">       orderDemo.setDesc(<span class="string">&quot;创建&quot;</span>);</span><br><span class="line">       orderList.add(orderDemo);</span><br><span class="line"></span><br><span class="line">       orderDemo = <span class="keyword">new</span> OrderStep();</span><br><span class="line">       orderDemo.setOrderId(<span class="number">15103111065L</span>);</span><br><span class="line">       orderDemo.setDesc(<span class="string">&quot;付款&quot;</span>);</span><br><span class="line">       orderList.add(orderDemo);</span><br><span class="line"></span><br><span class="line">       orderDemo = <span class="keyword">new</span> OrderStep();</span><br><span class="line">       orderDemo.setOrderId(<span class="number">15103117235L</span>);</span><br><span class="line">       orderDemo.setDesc(<span class="string">&quot;付款&quot;</span>);</span><br><span class="line">       orderList.add(orderDemo);</span><br><span class="line"></span><br><span class="line">       orderDemo = <span class="keyword">new</span> OrderStep();</span><br><span class="line">       orderDemo.setOrderId(<span class="number">15103111065L</span>);</span><br><span class="line">       orderDemo.setDesc(<span class="string">&quot;完成&quot;</span>);</span><br><span class="line">       orderList.add(orderDemo);</span><br><span class="line"></span><br><span class="line">       orderDemo = <span class="keyword">new</span> OrderStep();</span><br><span class="line">       orderDemo.setOrderId(<span class="number">15103111039L</span>);</span><br><span class="line">       orderDemo.setDesc(<span class="string">&quot;推送&quot;</span>);</span><br><span class="line">       orderList.add(orderDemo);</span><br><span class="line"></span><br><span class="line">       orderDemo = <span class="keyword">new</span> OrderStep();</span><br><span class="line">       orderDemo.setOrderId(<span class="number">15103117235L</span>);</span><br><span class="line">       orderDemo.setDesc(<span class="string">&quot;完成&quot;</span>);</span><br><span class="line">       orderList.add(orderDemo);</span><br><span class="line"></span><br><span class="line">       orderDemo = <span class="keyword">new</span> OrderStep();</span><br><span class="line">       orderDemo.setOrderId(<span class="number">15103111039L</span>);</span><br><span class="line">       orderDemo.setDesc(<span class="string">&quot;完成&quot;</span>);</span><br><span class="line">       orderList.add(orderDemo);</span><br><span class="line"></span><br><span class="line">       <span class="keyword">return</span> orderList;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-2-2-顺序消费消息"><a href="#4-2-2-顺序消费消息" class="headerlink" title="4.2.2 顺序消费消息"></a>4.2.2 顺序消费消息</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">* 顺序消息消费，带事务方式（应用可控制Offset什么时候提交）</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConsumerInOrder</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">       DefaultMQPushConsumer consumer = <span class="keyword">new</span> </span><br><span class="line">           DefaultMQPushConsumer(<span class="string">&quot;please_rename_unique_group_name_3&quot;</span>);</span><br><span class="line">       consumer.setNamesrvAddr(<span class="string">&quot;127.0.0.1:9876&quot;</span>);</span><br><span class="line">       <span class="comment">/**</span></span><br><span class="line"><span class="comment">        * 设置Consumer第一次启动是从队列头部开始消费还是队列尾部开始消费&lt;br&gt;</span></span><br><span class="line"><span class="comment">        * 如果非第一次启动，那么按照上次消费的位置继续消费</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">       consumer.setConsumeFromWhere(ConsumeFromWhere.CONSUME_FROM_FIRST_OFFSET);</span><br><span class="line"></span><br><span class="line">       consumer.subscribe(<span class="string">&quot;TopicTest&quot;</span>, <span class="string">&quot;TagA || TagC || TagD&quot;</span>);</span><br><span class="line"></span><br><span class="line">       consumer.registerMessageListener(<span class="keyword">new</span> MessageListenerOrderly() &#123;</span><br><span class="line"></span><br><span class="line">           Random random = <span class="keyword">new</span> Random();</span><br><span class="line"></span><br><span class="line">           <span class="meta">@Override</span></span><br><span class="line">           <span class="function"><span class="keyword">public</span> ConsumeOrderlyStatus <span class="title">consumeMessage</span><span class="params">(List&lt;MessageExt&gt; msgs, ConsumeOrderlyContext context)</span> </span>&#123;</span><br><span class="line">               context.setAutoCommit(<span class="keyword">true</span>);</span><br><span class="line">               <span class="keyword">for</span> (MessageExt msg : msgs) &#123;</span><br><span class="line">                   <span class="comment">// 可以看到每个queue有唯一的consume线程来消费, 订单对每个queue(分区)有序</span></span><br><span class="line">                   System.out.println(<span class="string">&quot;consumeThread=&quot;</span> + Thread.currentThread().getName() + <span class="string">&quot;queueId=&quot;</span> + msg.getQueueId() + <span class="string">&quot;, content:&quot;</span> + <span class="keyword">new</span> String(msg.getBody()));</span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">               <span class="keyword">try</span> &#123;</span><br><span class="line">                   <span class="comment">//模拟业务逻辑处理中...</span></span><br><span class="line">                   TimeUnit.SECONDS.sleep(random.nextInt(<span class="number">10</span>));</span><br><span class="line">               &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">                   e.printStackTrace();</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">return</span> ConsumeOrderlyStatus.SUCCESS;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;);</span><br><span class="line"></span><br><span class="line">       consumer.start();</span><br><span class="line"></span><br><span class="line">       System.out.println(<span class="string">&quot;Consumer Started.&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-3-延时消息"><a href="#4-3-延时消息" class="headerlink" title="4.3 延时消息"></a>4.3 延时消息</h2><p>比如电商里，提交了一个订单就可以发送一个延时消息，1h后去检查这个订单的状态，如果还是未付款就取消订单释放库存。</p><h3 id="4-3-1-启动消息消费者"><a href="#4-3-1-启动消息消费者" class="headerlink" title="4.3.1 启动消息消费者"></a>4.3.1 启动消息消费者</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScheduledMessageConsumer</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      <span class="comment">// 实例化消费者</span></span><br><span class="line">      DefaultMQPushConsumer consumer = <span class="keyword">new</span> DefaultMQPushConsumer(<span class="string">&quot;ExampleConsumer&quot;</span>);</span><br><span class="line">      <span class="comment">// 订阅Topics</span></span><br><span class="line">      consumer.subscribe(<span class="string">&quot;TestTopic&quot;</span>, <span class="string">&quot;*&quot;</span>);</span><br><span class="line">      <span class="comment">// 注册消息监听者</span></span><br><span class="line">      consumer.registerMessageListener(<span class="keyword">new</span> MessageListenerConcurrently() &#123;</span><br><span class="line">          <span class="meta">@Override</span></span><br><span class="line">          <span class="function"><span class="keyword">public</span> ConsumeConcurrentlyStatus <span class="title">consumeMessage</span><span class="params">(List&lt;MessageExt&gt; messages, ConsumeConcurrentlyContext context)</span> </span>&#123;</span><br><span class="line">              <span class="keyword">for</span> (MessageExt message : messages) &#123;</span><br><span class="line">                  <span class="comment">// Print approximate delay time period</span></span><br><span class="line">                  System.out.println(<span class="string">&quot;Receive message[msgId=&quot;</span> + message.getMsgId() + <span class="string">&quot;] &quot;</span> + (System.currentTimeMillis() - message.getStoreTimestamp()) + <span class="string">&quot;ms later&quot;</span>);</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">return</span> ConsumeConcurrentlyStatus.CONSUME_SUCCESS;</span><br><span class="line">          &#125;</span><br><span class="line">      &#125;);</span><br><span class="line">      <span class="comment">// 启动消费者</span></span><br><span class="line">      consumer.start();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-3-2-发送延时消息"><a href="#4-3-2-发送延时消息" class="headerlink" title="4.3.2 发送延时消息"></a>4.3.2 发送延时消息</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ScheduledMessageProducer</span> </span>&#123;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">      <span class="comment">// 实例化一个生产者来产生延时消息</span></span><br><span class="line">      DefaultMQProducer producer = <span class="keyword">new</span> DefaultMQProducer(<span class="string">&quot;ExampleProducerGroup&quot;</span>);</span><br><span class="line">      <span class="comment">// 启动生产者</span></span><br><span class="line">      producer.start();</span><br><span class="line">      <span class="keyword">int</span> totalMessagesToSend = <span class="number">100</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; totalMessagesToSend; i++) &#123;</span><br><span class="line">          Message message = <span class="keyword">new</span> Message(<span class="string">&quot;TestTopic&quot;</span>, (<span class="string">&quot;Hello scheduled message &quot;</span> + i).getBytes());</span><br><span class="line">          <span class="comment">// 设置延时等级3,这个消息将在10s之后发送(现在只支持固定的几个时间,详看delayTimeLevel)</span></span><br><span class="line">          message.setDelayTimeLevel(<span class="number">3</span>);</span><br><span class="line">          <span class="comment">// 发送消息</span></span><br><span class="line">          producer.send(message);</span><br><span class="line">      &#125;</span><br><span class="line">       <span class="comment">// 关闭生产者</span></span><br><span class="line">      producer.shutdown();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>###4.3.3 验证</p><p>您将会看到消息的消费比存储时间晚10秒</p><h3 id="4-3-4-使用限制"><a href="#4-3-4-使用限制" class="headerlink" title="4.3.4 使用限制"></a>4.3.4 使用限制</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// org/apache/rocketmq/store/config/MessageStoreConfig.java</span></span><br><span class="line"><span class="keyword">private</span> String messageDelayLevel = <span class="string">&quot;1s 5s 10s 30s 1m 2m 3m 4m 5m 6m 7m 8m 9m 10m 20m 30m 1h 2h&quot;</span>;</span><br></pre></td></tr></table></figure><p>现在RocketMq并不支持任意时间的延时，需要设置几个固定的延时等级，从1s到2h分别对应着等级1到18</p><h2 id="4-4-批量消息"><a href="#4-4-批量消息" class="headerlink" title="4.4 批量消息"></a>4.4 批量消息</h2><p>批量发送消息能显著提高传递小消息的性能。限制是这些批量消息应该有相同的topic，相同的waitStoreMsgOK，而且不能是延时消息。此外，这一批消息的总大小不应超过4MB。</p><h3 id="4-4-1-发送批量消息"><a href="#4-4-1-发送批量消息" class="headerlink" title="4.4.1 发送批量消息"></a>4.4.1 发送批量消息</h3><p>如果您每次只发送不超过4MB的消息，则很容易使用批处理，样例如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">String topic = <span class="string">&quot;BatchTest&quot;</span>;</span><br><span class="line">List&lt;Message&gt; messages = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">messages.add(<span class="keyword">new</span> Message(topic, <span class="string">&quot;TagA&quot;</span>, <span class="string">&quot;OrderID001&quot;</span>, <span class="string">&quot;Hello world 0&quot;</span>.getBytes()));</span><br><span class="line">messages.add(<span class="keyword">new</span> Message(topic, <span class="string">&quot;TagA&quot;</span>, <span class="string">&quot;OrderID002&quot;</span>, <span class="string">&quot;Hello world 1&quot;</span>.getBytes()));</span><br><span class="line">messages.add(<span class="keyword">new</span> Message(topic, <span class="string">&quot;TagA&quot;</span>, <span class="string">&quot;OrderID003&quot;</span>, <span class="string">&quot;Hello world 2&quot;</span>.getBytes()));</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">   producer.send(messages);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">   e.printStackTrace();</span><br><span class="line">   <span class="comment">//处理error</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果消息的总长度可能大于4MB时，这时候最好把消息进行分割</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ListSplitter</span> <span class="keyword">implements</span> <span class="title">Iterator</span>&lt;<span class="title">List</span>&lt;<span class="title">Message</span>&gt;&gt; </span>&#123;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">int</span> SIZE_LIMIT = <span class="number">1024</span> * <span class="number">1024</span> * <span class="number">4</span>;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">final</span> List&lt;Message&gt; messages;</span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">int</span> currIndex;</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="title">ListSplitter</span><span class="params">(List&lt;Message&gt; messages)</span> </span>&#123;</span><br><span class="line">           <span class="keyword">this</span>.messages = messages;</span><br><span class="line">   &#125;</span><br><span class="line">    <span class="meta">@Override</span> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasNext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> currIndex &lt; messages.size();</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="meta">@Override</span> </span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Message&gt; <span class="title">next</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">int</span> nextIndex = currIndex;</span><br><span class="line">       <span class="keyword">int</span> totalSize = <span class="number">0</span>;</span><br><span class="line">       <span class="keyword">for</span> (; nextIndex &lt; messages.size(); nextIndex++) &#123;</span><br><span class="line">           Message message = messages.get(nextIndex);</span><br><span class="line">           <span class="keyword">int</span> tmpSize = message.getTopic().length() + message.getBody().length;</span><br><span class="line">           Map&lt;String, String&gt; properties = message.getProperties();</span><br><span class="line">           <span class="keyword">for</span> (Map.Entry&lt;String, String&gt; entry : properties.entrySet()) &#123;</span><br><span class="line">               tmpSize += entry.getKey().length() + entry.getValue().length();</span><br><span class="line">           &#125;</span><br><span class="line">           tmpSize = tmpSize + <span class="number">20</span>; <span class="comment">// 增加日志的开销20字节</span></span><br><span class="line">           <span class="keyword">if</span> (tmpSize &gt; SIZE_LIMIT) &#123;</span><br><span class="line">               <span class="comment">//单个消息超过了最大的限制</span></span><br><span class="line">               <span class="comment">//忽略,否则会阻塞分裂的进程</span></span><br><span class="line">               <span class="keyword">if</span> (nextIndex - currIndex == <span class="number">0</span>) &#123;</span><br><span class="line">                  <span class="comment">//假如下一个子列表没有元素,则添加这个子列表然后退出循环,否则只是退出循环</span></span><br><span class="line">                  nextIndex++;</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="keyword">break</span>;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">if</span> (tmpSize + totalSize &gt; SIZE_LIMIT) &#123;</span><br><span class="line">               <span class="keyword">break</span>;</span><br><span class="line">           &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">               totalSize += tmpSize;</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">       &#125;</span><br><span class="line">       List&lt;Message&gt; subList = messages.subList(currIndex, nextIndex);</span><br><span class="line">       currIndex = nextIndex;</span><br><span class="line">       <span class="keyword">return</span> subList;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//把大的消息分裂成若干个小的消息</span></span><br><span class="line">ListSplitter splitter = <span class="keyword">new</span> ListSplitter(messages);</span><br><span class="line"><span class="keyword">while</span> (splitter.hasNext()) &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">      List&lt;Message&gt;  listItem = splitter.next();</span><br><span class="line">      producer.send(listItem);</span><br><span class="line">  &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">      e.printStackTrace();</span><br><span class="line">      <span class="comment">//处理error</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-5-过滤消息"><a href="#4-5-过滤消息" class="headerlink" title="4.5 过滤消息"></a>4.5 过滤消息</h2><p>在大多数情况下，TAG是一个简单而有用的设计，其可以来选择您想要的消息。例如：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">DefaultMQPushConsumer consumer = <span class="keyword">new</span> DefaultMQPushConsumer(<span class="string">&quot;CID_EXAMPLE&quot;</span>);</span><br><span class="line">consumer.subscribe(<span class="string">&quot;TOPIC&quot;</span>, <span class="string">&quot;TAGA || TAGB || TAGC&quot;</span>);</span><br></pre></td></tr></table></figure><p>消费者将接收包含TAGA或TAGB或TAGC的消息。但是限制是一个消息只能有一个标签，这对于复杂的场景可能不起作用。在这种情况下，可以使用SQL表达式筛选消息。SQL特性可以通过发送消息时的属性来进行计算。在RocketMQ定义的语法下，可以实现一些简单的逻辑。下面是一个例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">------------</span><br><span class="line">| message  |</span><br><span class="line">|----------|  a &gt; 5 AND b = &#x27;abc&#x27;</span><br><span class="line">| a = 10   |  --------------------&gt; Gotten</span><br><span class="line">| b = &#x27;abc&#x27;|</span><br><span class="line">| c = true |</span><br><span class="line">------------</span><br><span class="line">------------</span><br><span class="line">| message  |</span><br><span class="line">|----------|   a &gt; 5 AND b = &#x27;abc&#x27;</span><br><span class="line">| a = 1    |  --------------------&gt; Missed</span><br><span class="line">| b = &#x27;abc&#x27;|</span><br><span class="line">| c = true |</span><br><span class="line">------------</span><br></pre></td></tr></table></figure><h3 id="4-5-1-SQL基本语法"><a href="#4-5-1-SQL基本语法" class="headerlink" title="4.5.1 SQL基本语法"></a>4.5.1 SQL基本语法</h3><p>RocketMQ只定义了一些基本语法来支持这个特性。你也可以很容易地扩展它。</p><ul><li>数值比较，比如：**&gt;，&gt;=，&lt;，&lt;=，BETWEEN，=；**</li><li>字符比较，比如：**=，&lt;&gt;，IN；**</li><li><strong>IS NULL</strong> 或者 <strong>IS NOT NULL；</strong></li><li>逻辑符号 <strong>AND，OR，NOT；</strong></li></ul><p>常量支持类型为：</p><ul><li>数值，比如：<strong>123，3.1415；</strong></li><li>字符，比如：**’abc’，必须用单引号包裹起来；**</li><li><strong>NULL</strong>，特殊的常量</li><li>布尔值，<strong>TRUE</strong> 或 <strong>FALSE</strong></li></ul><p>只有使用push模式的消费者才能用使用SQL92标准的sql语句，接口如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">subscribe</span><span class="params">(finalString topic, <span class="keyword">final</span> MessageSelector messageSelector)</span></span></span><br></pre></td></tr></table></figure><h3 id="4-5-2-消息生产者"><a href="#4-5-2-消息生产者" class="headerlink" title="4.5.2 消息生产者"></a>4.5.2 消息生产者</h3><p>发送消息时，你能通过<code>putUserProperty</code>来设置消息的属性</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">DefaultMQProducer producer = <span class="keyword">new</span> DefaultMQProducer(<span class="string">&quot;please_rename_unique_group_name&quot;</span>);</span><br><span class="line">producer.start();</span><br><span class="line">Message msg = <span class="keyword">new</span> Message(<span class="string">&quot;TopicTest&quot;</span>,</span><br><span class="line">   tag,</span><br><span class="line">   (<span class="string">&quot;Hello RocketMQ &quot;</span> + i).getBytes(RemotingHelper.DEFAULT_CHARSET)</span><br><span class="line">);</span><br><span class="line"><span class="comment">// 设置一些属性</span></span><br><span class="line">msg.putUserProperty(<span class="string">&quot;a&quot;</span>, String.valueOf(i));</span><br><span class="line">SendResult sendResult = producer.send(msg);</span><br><span class="line"></span><br><span class="line">producer.shutdown();</span><br></pre></td></tr></table></figure><h3 id="4-5-3-消息消费者"><a href="#4-5-3-消息消费者" class="headerlink" title="4.5.3 消息消费者"></a>4.5.3 消息消费者</h3><p>用MessageSelector.bySql来使用sql筛选消息</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">DefaultMQPushConsumer consumer = <span class="keyword">new</span> DefaultMQPushConsumer(<span class="string">&quot;please_rename_unique_group_name_4&quot;</span>);</span><br><span class="line"><span class="comment">// 只有订阅的消息有这个属性a, a &gt;=0 and a &lt;= 3</span></span><br><span class="line">consumer.subscribe(<span class="string">&quot;TopicTest&quot;</span>, MessageSelector.bySql(<span class="string">&quot;a between 0 and 3&quot;</span>);</span><br><span class="line">consumer.registerMessageListener(<span class="keyword">new</span> MessageListenerConcurrently() &#123;</span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> ConsumeConcurrentlyStatus <span class="title">consumeMessage</span><span class="params">(List&lt;MessageExt&gt; msgs, ConsumeConcurrentlyContext context)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> ConsumeConcurrentlyStatus.CONSUME_SUCCESS;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;);</span><br><span class="line">consumer.start();</span><br></pre></td></tr></table></figure><h2 id="4-6-事务消息"><a href="#4-6-事务消息" class="headerlink" title="4.6 事务消息"></a>4.6 事务消息</h2><p>###4.6.1 流程分析</p><p><img src="/2021/06/17/rocketmq%E4%BB%8B%E7%BB%8D/%E4%BA%8B%E5%8A%A1%E6%B6%88%E6%81%AF.png"></p><p>上图说明了事务消息的大致方案，其中分为两个流程：正常事务消息的发送及提交、事务消息的补偿流程。</p><p>####1）事务消息发送及提交</p><p>(1) 发送消息（half消息）。</p><p>(2) 服务端响应消息写入结果。</p><p>(3) 根据发送结果执行本地事务（如果写入失败，此时half消息对业务不可见，本地逻辑不执行）。</p><p>(4) 根据本地事务状态执行Commit或者Rollback（Commit操作生成消息索引，消息对消费者可见）</p><h4 id="2）事务补偿"><a href="#2）事务补偿" class="headerlink" title="2）事务补偿"></a>2）事务补偿</h4><p>(1) 对没有Commit/Rollback的事务消息（pending状态的消息），从服务端发起一次“回查”</p><p>(2) Producer收到回查消息，检查回查消息对应的本地事务的状态</p><p>(3) 根据本地事务状态，重新Commit或者Rollback</p><p>其中，补偿阶段用于解决消息Commit或者Rollback发生超时或者失败的情况。</p><h4 id="3）事务消息状态"><a href="#3）事务消息状态" class="headerlink" title="3）事务消息状态"></a>3）事务消息状态</h4><p>事务消息共有三种状态，提交状态、回滚状态、中间状态：</p><ul><li>TransactionStatus.CommitTransaction: 提交事务，它允许消费者消费此消息。</li><li>TransactionStatus.RollbackTransaction: 回滚事务，它代表该消息将被删除，不允许被消费。</li><li>TransactionStatus.Unknown: 中间状态，它代表需要检查消息队列来确定状态。</li></ul><h3 id="4-6-1-发送事务消息"><a href="#4-6-1-发送事务消息" class="headerlink" title="4.6.1 发送事务消息"></a>4.6.1 发送事务消息</h3><h4 id="1-创建事务性生产者"><a href="#1-创建事务性生产者" class="headerlink" title="1) 创建事务性生产者"></a>1) 创建事务性生产者</h4><p>使用 <code>TransactionMQProducer</code>类创建生产者，并指定唯一的 <code>ProducerGroup</code>，就可以设置自定义线程池来处理这些检查请求。执行本地事务后、需要根据执行结果对消息队列进行回复。回传的事务状态在请参考前一节。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Producer</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> MQClientException, InterruptedException </span>&#123;</span><br><span class="line">        <span class="comment">//创建事务监听器</span></span><br><span class="line">        TransactionListener transactionListener = <span class="keyword">new</span> TransactionListenerImpl();</span><br><span class="line">        <span class="comment">//创建消息生产者</span></span><br><span class="line">        TransactionMQProducer producer = <span class="keyword">new</span> TransactionMQProducer(<span class="string">&quot;group6&quot;</span>);</span><br><span class="line">        producer.setNamesrvAddr(<span class="string">&quot;192.168.25.135:9876;192.168.25.138:9876&quot;</span>);</span><br><span class="line">        <span class="comment">//生产者这是监听器</span></span><br><span class="line">        producer.setTransactionListener(transactionListener);</span><br><span class="line">        <span class="comment">//启动消息生产者</span></span><br><span class="line">        producer.start();</span><br><span class="line">        String[] tags = <span class="keyword">new</span> String[]&#123;<span class="string">&quot;TagA&quot;</span>, <span class="string">&quot;TagB&quot;</span>, <span class="string">&quot;TagC&quot;</span>&#125;;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                Message msg = <span class="keyword">new</span> Message(<span class="string">&quot;TransactionTopic&quot;</span>, tags[i % tags.length], <span class="string">&quot;KEY&quot;</span> + i,</span><br><span class="line">                        (<span class="string">&quot;Hello RocketMQ &quot;</span> + i).getBytes(RemotingHelper.DEFAULT_CHARSET));</span><br><span class="line">                SendResult sendResult = producer.sendMessageInTransaction(msg, <span class="keyword">null</span>);</span><br><span class="line">                System.out.printf(<span class="string">&quot;%s%n&quot;</span>, sendResult);</span><br><span class="line">                TimeUnit.SECONDS.sleep(<span class="number">1</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (MQClientException | UnsupportedEncodingException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//producer.shutdown();</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2）实现事务的监听接口"><a href="#2）实现事务的监听接口" class="headerlink" title="2）实现事务的监听接口"></a>2）实现事务的监听接口</h4><p>当发送半消息成功时，我们使用 <code>executeLocalTransaction</code> 方法来执行本地事务。它返回前一节中提到的三个事务状态之一。<code>checkLocalTranscation</code> 方法用于检查本地事务状态，并回应消息队列的检查请求。它也是返回前一节中提到的三个事务状态之一。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TransactionListenerImpl</span> <span class="keyword">implements</span> <span class="title">TransactionListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> LocalTransactionState <span class="title">executeLocalTransaction</span><span class="params">(Message msg, Object arg)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;执行本地事务&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (StringUtils.equals(<span class="string">&quot;TagA&quot;</span>, msg.getTags())) &#123;</span><br><span class="line">            <span class="keyword">return</span> LocalTransactionState.COMMIT_MESSAGE;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (StringUtils.equals(<span class="string">&quot;TagB&quot;</span>, msg.getTags())) &#123;</span><br><span class="line">            <span class="keyword">return</span> LocalTransactionState.ROLLBACK_MESSAGE;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> LocalTransactionState.UNKNOW;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> LocalTransactionState <span class="title">checkLocalTransaction</span><span class="params">(MessageExt msg)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;MQ检查消息Tag【&quot;</span>+msg.getTags()+<span class="string">&quot;】的本地事务执行结果&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> LocalTransactionState.COMMIT_MESSAGE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-6-2-使用限制"><a href="#4-6-2-使用限制" class="headerlink" title="4.6.2 使用限制"></a>4.6.2 使用限制</h3><ol><li>事务消息不支持延时消息和批量消息。</li><li>为了避免单个消息被检查太多次而导致半队列消息累积，我们默认将单个消息的检查次数限制为 15 次，但是用户可以通过 Broker 配置文件的 <code>transactionCheckMax</code>参数来修改此限制。如果已经检查某条消息超过 N 次的话（ N = <code>transactionCheckMax</code> ） 则 Broker 将丢弃此消息，并在默认情况下同时打印错误日志。用户可以通过重写 <code>AbstractTransactionCheckListener</code> 类来修改这个行为。</li><li>事务消息将在 Broker 配置文件中的参数 transactionMsgTimeout 这样的特定时间长度之后被检查。当发送事务消息时，用户还可以通过设置用户属性 CHECK_IMMUNITY_TIME_IN_SECONDS 来改变这个限制，该参数优先于 <code>transactionMsgTimeout</code> 参数。</li><li>事务性消息可能不止一次被检查或消费。</li><li>提交给用户的目标主题消息可能会失败，目前这依日志的记录而定。它的高可用性通过 RocketMQ 本身的高可用性机制来保证，如果希望确保事务消息不丢失、并且事务完整性得到保证，建议使用同步的双重写入机制。</li><li>事务消息的生产者 ID 不能与其他类型消息的生产者 ID 共享。与其他类型的消息不同，事务消息允许反向查询、MQ服务器能通过它们的生产者 ID 查询到消费者。</li></ol>]]></content>
      
      
      <categories>
          
          <category> rocketmq </category>
          
          <category> hello </category>
          
      </categories>
      
      
        <tags>
            
            <tag> rocketmq </tag>
            
            <tag> 消息队列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/06/17/hello-world/"/>
      <url>/2021/06/17/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hello World </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
